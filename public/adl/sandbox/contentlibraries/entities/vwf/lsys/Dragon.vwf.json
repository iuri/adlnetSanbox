{
    "children": {
        "Ncb98d29": {
            "extends": "line2.vwf",
            "properties": {
                "DisplayName": "pen",
                "___assetServerOriginalID": "Nbf769fac",
                "materialDef": {
                    "shininess": 15,
                    "alpha": 1,
                    "ambient": {
                        "r": 1,
                        "g": 1,
                        "b": 1
                    },
                    "color": {
                        "r": 1,
                        "g": 1,
                        "b": 1,
                        "a": 1
                    },
                    "emit": {
                        "r": 0,
                        "g": 0,
                        "b": 0
                    },
                    "reflect": 0.8,
                    "shadeless": false,
                    "shadow": true,
                    "specularColor": {
                        "r": 0.5773502691896258,
                        "g": 0.5773502691896258,
                        "b": 0.5773502691896258
                    },
                    "specularLevel": 1,
                    "layers": [{
                            "alpha": 1,
                            "blendMode": 0,
                            "mapInput": 0,
                            "mapTo": 1,
                            "offsetx": 0,
                            "offsety": 0,
                            "rot": 0,
                            "scalex": 1,
                            "scaley": 1,
                            "src": "checker.jpg"
                        }
                    ]
                },
                "owner": "admin",
                "points": [
                    [1, 0, 0],
                    [0.9999999996413408, 1, 0],
                    [-3.5865921343969376e-10, 0.9999999992826815, 0],
                    [-7.1731847666935e-10, 1.9999999992826814, 0],
                    [-1.0000000007173184, 1.999999998565363, 0],
                    [-0.9999999996413407, 0.9999999985653629, 0],
                    [-1.9999999996413407, 0.9999999978480444, 0],
                    [-2, 1.9999999978480445, 0],
                    [-3, 1.999999997130726, 0],
                    [-2.999999998924022, 0.9999999971307261, 0],
                    [-1.999999998924022, 0.9999999985653631, 0],
                    [-1.9999999978480443, -1.434636853758775e-9, 0],
                    [-2.999999997848044, -2.1519553802180876e-9, 0],
                    [-2.999999996772066, -1.0000000021519553, 0],
                    [-3.999999996772066, -1.0000000028692737, 0],
                    [-3.9999999971307254, -2.86927370751755e-9, 0],
                    [-4.999999997130725, -3.5865922339768626e-9, 0],
                    [-4.999999996054748, -1.0000000035865921, 0],
                    [-3.999999996054748, -1.000000002151955, 0],
                    [-3.99999999497877, -2.000000002151955, 0],
                    [-2.99999999497877, -2.000000000717318, 0],
                    [-2.999999996772066, -1.0000000007173182, 0],
                    [-1.999999996772066, -0.9999999992826811, 0],
                    [-1.9999999956960883, -1.9999999992826811, 0],
                    [-2.999999995696088, -1.9999999999999996, 0],
                    [-2.99999999462011, -2.9999999999999996, 0],
                    [-1.9999999946201101, -2.9999999985653627, 0],
                    [-1.9999999935441324, -3.9999999985653627, 0],
                    [-2.999999993544132, -3.9999999992826814, 0],
                    [-2.999999992468154, -4.999999999282681, 0],
                    [-3.999999992468154, -5, 0],
                    [-3.9999999928268135, -4, 0],
                    [-4.9999999928268135, -4.000000000717319, 0],
                    [-4.999999991750836, -5.000000000717319, 0],
                    [-3.999999991750836, -4.999999999282681, 0],
                    [-3.999999990674858, -5.999999999282681, 0],
                    [-2.999999990674858, -5.999999997848044, 0],
                    [-2.999999992468154, -4.999999997848044, 0],
                    [-1.9999999924681542, -4.999999996413407, 0],
                    [-1.9999999913921764, -5.999999996413407, 0],
                    [-0.9999999913921764, -5.9999999949787695, 0],
                    [-0.9999999931854727, -4.9999999949787695, 0],
                    [-1.9999999931854728, -4.999999997130725, 0],
                    [-1.9999999949787692, -3.9999999971307254, 0],
                    [-0.9999999949787692, -3.9999999956960886, 0],
                    [-0.9999999967720655, -2.9999999956960886, 0],
                    [3.2279344752694783e-9, -2.9999999942614517, 0],
                    [4.303912264958447e-9, -3.9999999942614517, 0],
                    [-0.9999999956960878, -3.9999999949787703, 0],
                    [-0.99999999462011, -4.99999999497877, 0],
                    [5.379889977952246e-9, -4.999999993544133, 0],
                    [6.455867767641215e-9, -5.999999993544133, 0],
                    [1.0000000064558678, -5.999999992109496, 0],
                    [1.0000000046625714, -4.999999992109496, 0],
                    [2.0000000046625717, -4.9999999906748585, 0],
                    [2.0000000057385496, -5.9999999906748585, 0],
                    [1.0000000057385496, -5.999999991392177, 0],
                    [1.0000000068145274, -6.999999991392177, 0],
                    [2.0000000068145276, -6.99999998995754, 0],
                    [2.0000000078905056, -7.99999998995754, 0],
                    [1.0000000078905056, -7.9999999906748585, 0],
                    [1.0000000089664833, -8.999999990674858, 0],
                    [8.96648333359451e-9, -8.999999991392176, 0],
                    [8.607824070364854e-9, -7.999999991392176, 0],
                    [-0.9999999913921759, -7.999999992109495, 0],
                    [-0.9999999903161981, -8.999999992109494, 0],
                    [9.6838018714962e-9, -8.999999990674857, 0],
                    [1.075977966118517e-8, -9.999999990674857, 0],
                    [1.0000000107597797, -9.99999998924022, 0],
                    [1.0000000089664833, -8.99999998924022, 0],
                    [2.0000000089664836, -8.999999987805582, 0],
                    [2.0000000100424615, -9.999999987805582, 0],
                    [3.0000000100424615, -9.999999986370945, 0],
                    [3.0000000082491654, -8.999999986370945, 0],
                    [2.0000000082491654, -8.9999999885229, 0],
                    [2.000000006455869, -7.9999999885229, 0],
                    [3.000000006455869, -7.9999999870882625, 0],
                    [3.000000004662573, -6.9999999870882625, 0],
                    [4.0000000046625726, -6.999999985653625, 0],
                    [4.00000000573855, -7.999999985653625, 0],
                    [5.00000000573855, -7.999999984218988, 0],
                    [5.000000003945254, -6.999999984218988, 0],
                    [4.000000003945254, -6.999999986370944, 0],
                    [4.000000002151958, -5.999999986370944, 0],
                    [3.0000000021519577, -5.9999999885229, 0],
                    [3.0000000046625726, -6.9999999885229, 0],
                    [2.0000000046625726, -6.999999990674856, 0],
                    [2.0000000028692764, -5.999999990674856, 0],
                    [3.0000000028692764, -5.9999999892402185, 0],
                    [3.00000000107598, -4.9999999892402185, 0],
                    [2.00000000107598, -4.999999991392174, 0],
                    [1.9999999992826838, -3.9999999913921744, 0],
                    [2.999999999282684, -3.9999999899575376, 0],
                    [2.999999997489388, -2.9999999899575376, 0],
                    [3.999999997489388, -2.9999999885229007, 0],
                    [3.999999998565366, -3.9999999885229007, 0],
                    [2.999999998565366, -3.9999999892402194, 0],
                    [2.999999999641344, -4.999999989240219, 0],
                    [3.999999999641344, -4.999999987805582, 0],
                    [4.000000000717321, -5.999999987805582, 0],
                    [5.000000000717321, -5.999999986370945, 0],
                    [4.999999998924025, -4.999999986370945, 0],
                    [5.999999998924025, -4.9999999849363075, 0],
                    [6.000000000000003, -5.9999999849363075, 0],
                    [7.000000000000003, -5.99999998350167, 0],
                    [6.9999999982067065, -4.99999998350167, 0],
                    [5.9999999982067065, -4.999999985653626, 0],
                    [5.99999999641341, -3.999999985653626, 0],
                    [6.99999999641341, -3.9999999842189893, 0],
                    [6.999999994620114, -2.9999999842189893, 0],
                    [7.999999994620114, -2.9999999827843524, 0],
                    [7.999999995696092, -3.9999999827843524, 0],
                    [6.999999995696092, -3.999999983501671, 0],
                    [6.999999996772069, -4.999999983501671, 0],
                    [7.999999996772069, -4.999999982067034, 0],
                    [7.999999997848047, -5.999999982067034, 0],
                    [8.999999997848047, -5.9999999806323965, 0],
                    [8.99999999605475, -4.9999999806323965, 0],
                    [9.99999999605475, -4.999999979197759, 0],
                    [9.999999997130729, -5.999999979197759, 0],
                    [8.999999997130729, -5.999999979915078, 0],
                    [8.999999998206707, -6.999999979915078, 0],
                    [9.999999998206707, -6.9999999784804405, 0],
                    [9.999999999282686, -7.9999999784804405, 0],
                    [8.999999999282686, -7.999999979197759, 0],
                    [9.000000000358664, -8.99999997919776, 0],
                    [8.000000000358664, -8.999999979915078, 0],
                    [8.000000000000005, -7.999999979915078, 0],
                    [7.000000000000005, -7.9999999806323965, 0],
                    [7.000000001075983, -8.999999980632396, 0],
                    [8.000000001075982, -8.999999979197758, 0],
                    [8.00000000215196, -9.999999979197758, 0],
                    [9.00000000215196, -9.999999977763121, 0],
                    [9.000000000358664, -8.999999977763121, 0],
                    [10.000000000358664, -8.999999976328484, 0],
                    [10.000000001434643, -9.999999976328484, 0],
                    [11.000000001434643, -9.999999974893846, 0],
                    [10.999999999641346, -8.999999974893846, 0],
                    [9.999999999641346, -8.999999977045801, 0],
                    [9.99999999784805, -7.9999999770458015, 0],
                    [10.99999999784805, -7.999999975611164, 0],
                    [10.999999996054754, -6.999999975611164, 0],
                    [11.999999996054754, -6.999999974176527, 0],
                    [11.999999997130733, -7.999999974176527, 0],
                    [12.999999997130733, -7.99999997274189, 0],
                    [12.999999995337436, -6.99999997274189, 0],
                    [11.999999995337436, -6.9999999748938455, 0],
                    [11.99999999354414, -5.9999999748938455, 0],
                    [10.99999999354414, -5.9999999770458015, 0],
                    [10.999999996054756, -6.9999999770458015, 0],
                    [9.999999996054756, -6.999999979197757, 0],
                    [9.99999999426146, -5.999999979197757, 0],
                    [10.99999999426146, -5.99999997776312, 0],
                    [10.999999992468164, -4.99999997776312, 0],
                    [9.999999992468164, -4.999999979915076, 0],
                    [9.999999990674867, -3.999999979915076, 0],
                    [10.999999990674867, -3.999999978480439, 0],
                    [10.999999988881571, -2.999999978480439, 0],
                    [11.999999988881571, -2.9999999770458023, 0],
                    [11.99999998995755, -3.9999999770458023, 0],
                    [12.99999998995755, -3.9999999756111655, 0],
                    [12.999999988164253, -2.9999999756111655, 0],
                    [11.999999988164253, -2.999999977763121, 0],
                    [11.999999986370957, -1.999999977763121, 0],
                    [10.999999986370957, -1.9999999799150765, 0],
                    [10.999999988881573, -2.9999999799150765, 0],
                    [9.999999988881573, -2.999999982067032, 0],
                    [9.999999987088277, -1.999999982067032, 0],
                    [8.999999987088277, -1.9999999842189875, 0],
                    [8.999999989598892, -2.9999999842189875, 0],
                    [9.999999989598892, -2.9999999813497134, 0],
                    [9.999999992109508, -3.9999999813497134, 0],
                    [8.999999992109508, -3.999999983501669, 0],
                    [8.999999994620124, -4.999999983501668, 0],
                    [7.999999994620124, -4.999999985653624, 0],
                    [7.999999992826828, -3.9999999856536244, 0],
                    [8.999999992826828, -3.9999999842189875, 0],
                    [8.999999991033532, -2.9999999842189875, 0],
                    [7.9999999910335315, -2.999999986370943, 0],
                    [7.999999989240235, -1.999999986370943, 0],
                    [6.999999989240235, -1.9999999885228985, 0],
                    [6.99999999175085, -2.9999999885228985, 0],
                    [5.99999999175085, -2.999999990674854, 0],
                    [5.999999989957554, -1.999999990674854, 0],
                    [6.999999989957554, -1.999999989240217, 0],
                    [6.999999988164258, -0.9999999892402169, 0],
                    [5.999999988164258, -0.9999999913921725, 0],
                    [5.999999986370962, 8.60782745082389e-9, 0],
                    [6.999999986370962, 1.0042464503742517e-8, 0],
                    [6.9999999845776655, 1.0000000100424644, 0],
                    [7.9999999845776655, 1.0000000114771015, 0],
                    [7.999999985653643, 1.1477101491408348e-8, 0],
                    [6.999999985653643, 1.0759782964949034e-8, 0],
                    [6.9999999867296205, -0.999999989240217, 0],
                    [7.9999999867296205, -0.99999998780558, 0],
                    [7.999999987805598, -1.9999999878055799, 0],
                    [8.999999987805598, -1.9999999863709428, 0],
                    [8.999999986012302, -0.9999999863709428, 0],
                    [9.999999986012302, -0.9999999849363057, 0],
                    [9.99999998708828, -1.9999999849363057, 0],
                    [10.99999998708828, -1.9999999835016686, 0],
                    [10.999999985294984, -0.9999999835016686, 0],
                    [9.999999985294984, -0.9999999856536242, 0],
                    [9.999999983501688, 1.434637575403741e-8, 0],
                    [10.999999983501688, 1.5781012806956035e-8, 0],
                    [10.999999981708392, 1.0000000157810127, 0],
                    [11.999999981708392, 1.0000000172156498, 0],
                    [11.99999998278437, 1.7215649794621868e-8, 0],
                    [12.99999998278437, 1.8650286847540492e-8, 0],
                    [12.999999980991074, 1.0000000186502869, 0],
                    [11.999999980991074, 1.0000000164983314, 0],
                    [11.999999979197778, 2.0000000164983316, 0],
                    [10.999999979197778, 2.000000014346376, 0],
                    [10.999999981708394, 1.000000014346376, 0],
                    [9.999999981708394, 1.0000000121944206, 0],
                    [9.999999979915097, 2.0000000121944206, 0],
                    [10.999999979915097, 2.0000000136290574, 0],
                    [10.999999978121801, 3.0000000136290574, 0],
                    [9.999999978121801, 3.000000011477102, 0],
                    [9.999999976328505, 4.000000011477102, 0],
                    [10.999999976328505, 4.000000012911739, 0],
                    [10.999999974535209, 5.000000012911739, 0],
                    [11.999999974535209, 5.0000000143463765, 0],
                    [11.999999975611187, 4.0000000143463765, 0],
                    [10.999999975611187, 4.000000013629058, 0],
                    [10.999999976687166, 3.000000013629058, 0],
                    [11.999999976687166, 3.0000000150636947, 0],
                    [11.999999977763144, 2.0000000150636947, 0],
                    [12.999999977763144, 2.0000000164983316, 0],
                    [12.999999975969848, 3.0000000164983316, 0],
                    [13.999999975969848, 3.0000000179329684, 0],
                    [13.999999977045826, 2.0000000179329684, 0],
                    [14.999999977045826, 2.0000000193676053, 0],
                    [14.99999997525253, 3.0000000193676053, 0],
                    [13.99999997525253, 3.00000001721565, 0],
                    [13.999999973459234, 4.000000017215649, 0],
                    [14.999999973459234, 4.000000018650287, 0],
                    [14.999999971665938, 5.000000018650287, 0],
                    [15.999999971665938, 5.000000020084924, 0],
                    [15.999999972741916, 4.000000020084924, 0],
                    [14.999999972741916, 4.000000019367605, 0],
                    [14.999999973817895, 3.0000000193676053, 0],
                    [15.999999973817895, 3.000000020802242, 0],
                    [15.999999974893873, 2.000000020802242, 0],
                    [16.999999974893875, 2.000000022236879, 0],
                    [16.99999997310058, 3.000000022236879, 0],
                    [17.99999997310058, 3.000000023671516, 0],
                    [17.999999974176557, 2.000000023671516, 0],
                    [16.999999974176557, 2.000000022954197, 0],
                    [16.999999975252535, 1.0000000229541972, 0],
                    [17.999999975252535, 1.0000000243888343, 0],
                    [17.999999976328514, 2.4388834285460348e-8, 0],
                    [16.999999976328514, 2.3671515759001034e-8, 0],
                    [16.999999977404492, -0.9999999763284843, 0],
                    [15.999999977404492, -0.9999999770458028, 0],
                    [15.999999977045833, 2.2954197209656968e-8, 0],
                    [14.999999977045833, 2.2236878683197654e-8, 0],
                    [14.999999978121812, -0.9999999777631213, 0],
                    [15.999999978121812, -0.9999999763284843, 0],
                    [15.99999997919779, -1.9999999763284841, 0],
                    [16.99999997919779, -1.999999974893847, 0],
                    [16.999999977404492, -0.9999999748938471, 0],
                    [17.999999977404492, -0.99999997345921, 0],
                    [17.99999997848047, -1.99999997345921, 0],
                    [18.99999997848047, -1.999999972024573, 0],
                    [18.999999976687175, -0.9999999720245729, 0],
                    [17.999999976687175, -0.9999999741765285, 0],
                    [17.99999997489388, 2.582347147228603e-8, 0],
                    [18.99999997489388, 2.7258108525204655e-8, 0],
                    [18.999999973100582, 1.0000000272581084, 0],
                    [19.999999973100582, 1.0000000286927455, 0],
                    [19.99999997417656, 2.8692745512870488e-8, 0],
                    [20.99999997417656, 3.0127382565789115e-8, 0],
                    [20.999999972383264, 1.0000000301273826, 0],
                    [19.999999972383264, 1.000000027975427, 0],
                    [19.99999997058997, 2.0000000279754273, 0],
                    [18.99999997058997, 2.000000025823472, 0],
                    [18.999999973100582, 1.0000000258234718, 0],
                    [17.999999973100582, 1.0000000236715163, 0],
                    [17.999999971307286, 2.0000000236715163, 0],
                    [18.999999971307286, 2.000000025106153, 0],
                    [18.99999996951399, 3.000000025106153, 0],
                    [17.99999996951399, 3.0000000229541977, 0],
                    [17.999999967720694, 4.000000022954198, 0],
                    [18.999999967720694, 4.000000024388835, 0],
                    [18.999999965927397, 5.000000024388835, 0],
                    [19.999999965927397, 5.000000025823472, 0],
                    [19.999999967003376, 4.000000025823472, 0],
                    [20.999999967003376, 4.0000000272581095, 0],
                    [20.99999996521008, 5.0000000272581095, 0],
                    [19.99999996521008, 5.000000025106154, 0],
                    [19.999999963416784, 6.000000025106154, 0],
                    [18.999999963416784, 6.000000022954198, 0],
                    [18.999999965927397, 5.000000022954198, 0],
                    [17.999999965927397, 5.000000020802242, 0],
                    [17.9999999641341, 6.000000020802242, 0],
                    [16.9999999641341, 6.000000018650286, 0],
                    [16.999999966644715, 5.000000018650286, 0],
                    [17.999999966644715, 5.0000000215195595, 0],
                    [17.99999996915533, 4.0000000215195595, 0],
                    [16.99999996915533, 4.0000000193676035, 0],
                    [16.999999971665943, 3.0000000193676035, 0],
                    [15.999999971665943, 3.000000017215648, 0],
                    [15.999999969872647, 4.000000017215648, 0],
                    [16.999999969872647, 4.000000018650285, 0],
                    [16.99999996807935, 5.000000018650285, 0],
                    [15.99999996807935, 5.000000016498329, 0],
                    [15.999999966286055, 6.000000016498329, 0],
                    [14.999999966286055, 6.000000014346373, 0],
                    [14.99999996879667, 5.000000014346373, 0],
                    [13.99999996879667, 5.000000012194417, 0],
                    [13.999999967003374, 6.000000012194417, 0],
                    [14.999999967003374, 6.000000013629054, 0],
                    [14.999999965210078, 7.000000013629054, 0],
                    [13.999999965210078, 7.000000011477098, 0],
                    [13.999999963416782, 8.000000011477098, 0],
                    [14.999999963416782, 8.000000012911736, 0],
                    [14.999999961623486, 9.000000012911736, 0],
                    [15.999999961623486, 9.000000014346373, 0],
                    [15.999999962699464, 8.000000014346373, 0],
                    [16.999999962699462, 8.00000001578101, 0],
                    [16.999999960906166, 9.00000001578101, 0],
                    [15.999999960906166, 9.000000013629055, 0],
                    [15.99999995911287, 10.000000013629055, 0],
                    [14.99999995911287, 10.0000000114771, 0],
                    [14.999999961623486, 9.0000000114771, 0],
                    [13.999999961623486, 9.000000009325145, 0],
                    [13.99999995983019, 10.000000009325145, 0],
                    [12.99999995983019, 10.00000000717319, 0],
                    [12.999999962340805, 9.00000000717319, 0],
                    [13.999999962340805, 9.000000010042465, 0],
                    [13.99999996485142, 8.000000010042465, 0],
                    [12.99999996485142, 8.00000000789051, 0],
                    [12.999999967362037, 7.00000000789051, 0],
                    [11.999999967362037, 7.000000005738554, 0],
                    [11.99999996556874, 8.000000005738553, 0],
                    [10.99999996556874, 8.000000003586598, 0],
                    [10.999999968079356, 7.000000003586598, 0],
                    [11.999999968079356, 7.000000006455871, 0],
                    [11.999999970589972, 6.000000006455871, 0],
                    [12.999999970589972, 6.000000009325145, 0],
                    [12.999999967362038, 7.000000009325145, 0],
                    [13.999999967362038, 7.000000012194419, 0],
                    [13.999999969872654, 6.000000012194419, 0],
                    [12.999999969872654, 6.000000010042463, 0],
                    [12.99999997238327, 5.000000010042463, 0],
                    [13.99999997238327, 5.000000012911737, 0],
                    [13.999999974893885, 4.000000012911737, 0],
                    [12.999999974893885, 4.000000010759781, 0],
                    [12.999999977404501, 3.0000000107597806, 0],
                    [11.999999977404501, 3.000000008607825, 0],
                    [11.999999975611205, 4.000000008607826, 0],
                    [12.999999975611205, 4.000000010042463, 0],
                    [12.999999973817909, 5.000000010042463, 0],
                    [11.999999973817909, 5.000000007890507, 0],
                    [11.999999972024613, 6.000000007890507, 0],
                    [10.999999972024613, 6.000000005738551, 0],
                    [10.999999974535228, 5.000000005738551, 0],
                    [9.999999974535228, 5.000000003586595, 0],
                    [9.999999972741932, 6.000000003586595, 0],
                    [8.999999972741932, 6.000000001434639, 0],
                    [8.999999975252548, 5.000000001434639, 0],
                    [9.999999975252548, 5.000000004303913, 0],
                    [9.999999977763164, 4.000000004303913, 0],
                    [8.999999977763164, 4.000000002151957, 0],
                    [8.99999998027378, 3.000000002151957, 0],
                    [7.999999980273779, 3.0000000000000013, 0],
                    [7.999999978480483, 4.000000000000002, 0],
                    [8.999999978480483, 4.000000001434639, 0],
                    [8.999999976687187, 5.000000001434639, 0],
                    [7.999999976687187, 4.999999999282683, 0],
                    [7.999999974893891, 5.999999999282683, 0],
                    [6.999999974893891, 5.999999997130727, 0],
                    [6.999999977404506, 4.999999997130727, 0],
                    [5.999999977404506, 4.999999994978771, 0],
                    [5.9999999756112095, 5.999999994978771, 0],
                    [6.9999999756112095, 5.9999999964134085, 0],
                    [6.999999973817913, 6.9999999964134085, 0],
                    [5.999999973817913, 6.999999994261453, 0],
                    [5.999999972024617, 7.999999994261453, 0],
                    [6.999999972024617, 7.99999999569609, 0],
                    [6.999999970231321, 8.99999999569609, 0],
                    [7.999999970231321, 8.999999997130727, 0],
                    [7.9999999713072985, 7.999999997130727, 0],
                    [6.9999999713072985, 7.9999999964134085, 0],
                    [6.999999972383276, 6.9999999964134085, 0],
                    [7.999999972383276, 6.999999997848046, 0],
                    [7.9999999734592535, 5.999999997848046, 0],
                    [8.999999973459254, 5.999999999282683, 0],
                    [8.999999971665957, 6.999999999282683, 0],
                    [9.999999971665957, 7.00000000071732, 0],
                    [9.999999972741936, 6.00000000071732, 0],
                    [10.999999972741936, 6.000000002151958, 0],
                    [10.99999997094864, 7.000000002151958, 0],
                    [9.99999997094864, 7.000000000000002, 0],
                    [9.999999969155343, 8.000000000000002, 0],
                    [10.999999969155343, 8.000000001434639, 0],
                    [10.999999967362047, 9.000000001434639, 0],
                    [11.999999967362047, 9.000000002869276, 0],
                    [11.999999968438026, 8.000000002869276, 0],
                    [12.999999968438026, 8.000000004303914, 0],
                    [12.99999996664473, 9.000000004303914, 0],
                    [11.99999996664473, 9.000000002151959, 0],
                    [11.999999964851433, 10.000000002151959, 0],
                    [10.999999964851433, 10.000000000000004, 0],
                    [10.999999967362049, 9.000000000000004, 0],
                    [9.999999967362049, 8.999999997848048, 0],
                    [9.999999965568753, 9.999999997848048, 0],
                    [10.999999965568753, 9.999999999282686, 0],
                    [10.999999963775457, 10.999999999282686, 0],
                    [9.999999963775457, 10.99999999713073, 0],
                    [9.99999996198216, 11.99999999713073, 0],
                    [10.99999996198216, 11.999999998565368, 0],
                    [10.999999960188864, 12.999999998565368, 0],
                    [11.999999960188864, 13.000000000000005, 0],
                    [11.999999961264843, 12.000000000000005, 0],
                    [12.999999961264843, 12.000000001434643, 0],
                    [12.999999959471547, 13.000000001434643, 0],
                    [11.999999959471547, 12.999999999282688, 0],
                    [11.99999995767825, 13.999999999282688, 0],
                    [10.99999995767825, 13.999999997130733, 0],
                    [10.999999960188866, 12.999999997130733, 0],
                    [9.999999960188866, 12.999999994978777, 0],
                    [9.99999995839557, 13.999999994978777, 0],
                    [8.99999995839557, 13.999999992826822, 0],
                    [8.999999960906186, 12.999999992826822, 0],
                    [9.999999960906186, 12.999999995696097, 0],
                    [9.999999963416801, 11.999999995696097, 0],
                    [8.999999963416801, 11.999999993544142, 0],
                    [8.999999965927417, 10.999999993544142, 0],
                    [7.999999965927417, 10.999999991392187, 0],
                    [7.999999964134121, 11.999999991392187, 0],
                    [8.99999996413412, 11.999999992826824, 0],
                    [8.999999962340825, 12.999999992826824, 0],
                    [7.999999962340825, 12.999999990674869, 0],
                    [7.9999999605475285, 13.999999990674869, 0],
                    [6.9999999605475285, 13.999999988522914, 0],
                    [6.999999963058143, 12.999999988522914, 0],
                    [5.999999963058143, 12.999999986370959, 0],
                    [5.999999961264847, 13.999999986370959, 0],
                    [6.999999961264847, 13.999999987805596, 0],
                    [6.999999959471551, 14.999999987805596, 0],
                    [5.999999959471551, 14.999999985653641, 0],
                    [5.999999957678255, 15.999999985653641, 0],
                    [6.999999957678255, 15.999999987088279, 0],
                    [6.999999955884959, 16.99999998708828, 0],
                    [7.999999955884959, 16.999999988522916, 0],
                    [7.999999956960936, 15.999999988522916, 0],
                    [6.999999956960936, 15.999999987805598, 0],
                    [6.999999958036914, 14.999999987805598, 0],
                    [7.999999958036914, 14.999999989240235, 0],
                    [7.999999959112891, 13.999999989240235, 0],
                    [8.999999959112891, 13.999999990674873, 0],
                    [8.999999957319595, 14.999999990674873, 0],
                    [9.999999957319595, 14.99999999210951, 0],
                    [9.999999958395573, 13.99999999210951, 0],
                    [10.999999958395573, 13.999999993544147, 0],
                    [10.999999956602277, 14.999999993544147, 0],
                    [9.999999956602277, 14.999999991392192, 0],
                    [9.999999954808981, 15.999999991392192, 0],
                    [10.999999954808981, 15.99999999282683, 0],
                    [10.999999953015685, 16.99999999282683, 0],
                    [11.999999953015685, 16.999999994261465, 0],
                    [11.999999954091663, 15.999999994261465, 0],
                    [12.999999954091663, 15.999999995696102, 0],
                    [12.999999952298367, 16.9999999956961, 0],
                    [11.999999952298367, 16.999999993544144, 0],
                    [11.999999950505071, 17.999999993544144, 0],
                    [10.999999950505071, 17.999999991392187, 0],
                    [10.999999953015687, 16.999999991392187, 0],
                    [9.999999953015687, 16.99999998924023, 0],
                    [9.99999995122239, 17.99999998924023, 0],
                    [10.99999995122239, 17.999999990674866, 0],
                    [10.999999949429094, 18.999999990674866, 0],
                    [9.999999949429094, 18.99999998852291, 0],
                    [9.999999947635798, 19.99999998852291, 0],
                    [10.999999947635798, 19.999999989957544, 0],
                    [10.999999945842502, 20.999999989957544, 0],
                    [11.999999945842502, 20.99999999139218, 0],
                    [11.99999994691848, 19.99999999139218, 0],
                    [10.99999994691848, 19.999999990674862, 0],
                    [10.999999947994459, 18.999999990674862, 0],
                    [11.999999947994459, 18.999999992109498, 0],
                    [11.999999949070437, 17.999999992109498, 0],
                    [12.999999949070437, 17.999999993544133, 0],
                    [12.999999947277141, 18.999999993544133, 0],
                    [13.999999947277141, 18.99999999497877, 0],
                    [13.99999994835312, 17.99999999497877, 0],
                    [14.99999994835312, 17.999999996413404, 0],
                    [14.999999946559823, 18.999999996413404, 0],
                    [13.999999946559823, 18.999999994261447, 0],
                    [13.999999944766527, 19.999999994261447, 0],
                    [14.999999944766527, 19.999999995696083, 0],
                    [14.999999942973231, 20.999999995696083, 0],
                    [15.999999942973231, 20.99999999713072, 0],
                    [15.99999994404921, 19.99999999713072, 0],
                    [14.99999994404921, 19.9999999964134, 0],
                    [14.999999945125188, 18.9999999964134, 0],
                    [15.999999945125188, 18.999999997848036, 0],
                    [15.999999946201166, 17.999999997848036, 0],
                    [16.999999946201164, 17.99999999928267, 0],
                    [16.999999944407868, 18.99999999928267, 0],
                    [17.999999944407868, 19.000000000717307, 0],
                    [17.999999945483847, 18.000000000717307, 0],
                    [16.999999945483847, 17.99999999999999, 0],
                    [16.999999946559825, 16.99999999999999, 0],
                    [17.999999946559825, 17.000000001434625, 0],
                    [17.999999947635803, 16.000000001434625, 0],
                    [16.999999947635803, 16.000000000717307, 0],
                    [16.999999948711782, 15.000000000717307, 0],
                    [15.999999948711782, 14.99999999999999, 0],
                    [15.999999948353123, 15.99999999999999, 0]
                ],
                "rotation": [0, 0, 1, 0],
                "scale": [1, 1, 1],
                "size": [1, 1, 1],
                "tempid": "Nb29c957d",
                "texture": "checker.jpg",
                "transform": [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0.0010000000474974513, 1],
                "type": "Spline"
            },
            "random": {
                "c": 1,
                "s0": 0.199712321395054,
                "s1": 0.0619459894951433,
                "s2": 0.732675907667726
            },
            "sequence": 0,
            "source": "vwf/model/threejs/line.js",
            "type": "subDriver/threejs"
        }
    },
    "extends": "turtle2.vwf",
    "methods": {
        "forceUpdate": {
            "body": "console.log('Force to update old source code!');\nvar methods = Engine.getMethods(this.id);\nvar nodeMethodsToDel = ['genLSys', 'initGrammarLSys', 'initGrammarTurtle', 'initLSysSemantics', 'initTurtleSemantics'];\nfor (var i in nodeMethodsToDel)\n{\n    if (methods[nodeMethodsToDel[i]] !== undefined)\n    {\n        var methodName = nodeMethodsToDel[i];\n        Engine.deleteMethod(this.id, methodName);\n    }\n}\nvar nodeMethods = ['genLSys', 'initGrammarLSys', 'initGrammarTurtle', 'initSemanticsLSys', 'initSemanticsTurtle'];\nvar methodsNew = Engine.getMethods(this.id);\nfor (var i in nodeMethods)\n{\n    if (methodsNew[nodeMethods[i]] === undefined)\n    {\n        var methodName = nodeMethods[i];\n        var prot = Engine.getMethods(Engine.prototype(this.id))[methodName];\n        Engine.createMethod(this.id, methodName, [], prot.body);\n    }\n}\n        Engine.deleteMethod(this.id, 'makeTurtle');\n        var prot = Engine.getMethods(Engine.prototype(this.id))['makeTurtle'];\n        Engine.createMethod(this.id, 'makeTurtle', prot.parameters, prot.body);\n",
            "parameters": []
        },
        "genLSys": {
            "body": "var gram = _LangManager.ohmLangs[this.id][\"LSys\"][\"grammar\"];\nvar sem = _LangManager.ohmLangs[this.id][\"LSys\"][\"semantics\"];\nvar str = this.rule;\nvar axioms = {\"F\": this.axiomF, \"G\": this.axiomG};\nfor (var i = 1; i < this.iteration; i++)\n{\n    var r = gram.match(str);\n    var n = sem(r);\n    var res = n.gen(axioms);\n    str = res.join(\"\");\n}\nreturn str;\n",
            "parameters": []
        },
        "generateLSys": {
            "body": "if (this.children_by_name.pen !== undefined)\n  {\n  this.resetLS();\n  var oldPos = this.transformAPI.getWorldPosition();\n  var oldRot = this.transformAPI.getRotation();\n  this.transformAPI.setPosition(0, 0, 0);\n  this.transformAPI.setRotation(0, 0, 0);\n  var lsys = this.genLSys();\n  var turtle = this.makeTurtle(lsys);\n  turtle.draw(this.stepLength, this.angle);\n  this.transformAPI.setPosition(oldPos);\n  this.transformAPI.setRotation(oldRot);\n  }\n",
            "parameters": []
        },
        "goForward": {
            "body": "this.transformAPI.move(step, 0, 0, \"local\");\nvar pos = this.transformAPI.getPosition();\npos = new THREE.Vector3(pos[0], pos[1], pos[2]);\nthis.children_by_name.pen.points.push([pos.x, pos.y, pos.z]);\n",
            "parameters": ["step"]
        },
        "initGrammarLSys": {
            "body": "console.log('Init grammar: LSys');\nthis.initSemanticsLSys();\n",
            "parameters": []
        },
        "initGrammarTurtle": {
            "body": "console.log('Init grammar: Turtle');\nthis.initSemanticsTurtle();\n",
            "parameters": []
        },
        "initSemanticsLSys": {
            "body": "var s = _LangManager.ohmLangs[this.id][\"LSys\"][\"semantics\"];\ns.addOperation('gen(x)',\n{\n    Gen: function(e)\n    {\n        return e.gen(this.args.x);\n    },\n    ReadRule: function(e)\n    {\n        return e.gen(this.args.x);\n    },\n    letters: function(_)\n    {\n        for (var propName in this.args.x)\n        {\n            if (propName == this.interval.contents)\n                return this.args.x[propName]\n        }\n        return this.interval.contents\n    },\n    symbols: function(_)\n    {\n        return this.interval.contents;\n    }\n});\n",
            "parameters": []
        },
        "initSemanticsTurtle": {
            "body": "var myID = this.id;\nvar s = _LangManager.ohmLangs[this.id][\"Turtle\"][\"semantics\"];\ns.addOperation('draw(x,y)',\n{\n    Draw: function(e)\n    {\n        e.draw(this.args.x, this.args.y);\n    },\n    drawLetter: function(e)\n    {\n        Engine.callMethod(myID, 'goForward', [this.args.x]);\n    },\n    turn: function(e)\n    {\n        if (this.interval.contents == \"+\")\n            Engine.callMethod(myID, 'turn', [this.args.y]);\n        if (this.interval.contents == \"-\")\n            Engine.callMethod(myID, 'turn', [-1 * this.args.y]);\n       }\n  });\n",
            "parameters": []
        },
        "makeLSys": {
            "body": "var lsys = this.genLSys();\nvar turtle = this.makeTurtle(lsys);\nthis.resetLS();\nvar oldPos = this.transformAPI.getWorldPosition();\nthis.transformAPI.setPosition(0, 0, 0);\nturtle.draw(this.stepLength, this.angle);\nthis.transformAPI.setPosition(oldPos);\n",
            "parameters": []
        },
        "makeTurtle": {
            "body": "var gram = _LangManager.ohmLangs[this.id][\"Turtle\"][\"grammar\"];\nvar sem = _LangManager.ohmLangs[this.id][\"Turtle\"][\"semantics\"];\nvar r = gram.match(lsys);\nvar n = sem(r);\nreturn n;",
            "parameters": ["lsys"]
        },
        "ready": {
            "body": "if (this.methods.hasOwnProperty('initLSysSemantics')){\n  this.forceUpdate();\n}\nthis.initGrammarLSys();\nthis.initGrammarTurtle();\nthis.generateLSys();\n",
            "parameters": []
        },
        "turn": {
            "body": "this.transformAPI.rotateZ(angle, \"local\");\n",
            "parameters": ["angle"]
        }
    },
    "properties": {
        "DisplayName": "turtle1",
        "LSys": {
            "name": "LSys",
            "superGrammar": {
                "name": "BuiltInRules",
                "superGrammar": {
                    "name": "ProtoBuiltInRules",
                    "ruleBodies": {
                        "any": {},
                        "end": {},
                        "spaces_": {
                            "expr": {
                                "ruleName": "space",
                                "params": []
                            }
                        },
                        "space": {
                            "from": "\u0000",
                            "to": " "
                        },
                        "lower": {
                            "category": "Ll",
                            "pattern": {}
                        },
                        "upper": {
                            "category": "Lu",
                            "pattern": {}
                        },
                        "unicodeLtmo": {
                            "category": "Ltmo",
                            "pattern": {}
                        }
                    },
                    "ruleFormals": {
                        "any": [],
                        "end": [],
                        "spaces_": [],
                        "space": [],
                        "lower": [],
                        "upper": [],
                        "unicodeLtmo": []
                    },
                    "ruleDescriptions": {
                        "any": "any object",
                        "end": "end of input",
                        "space": "a space",
                        "lower": "a lowercase letter",
                        "upper": "an uppercase letter"
                    },
                    "ctors": {},
                    "constructors": {}
                },
                "ruleBodies": {
                    "alnum": {
                        "terms": [{
                                "ruleName": "letter",
                                "params": []
                            }, {
                                "ruleName": "digit",
                                "params": []
                            }
                        ]
                    },
                    "letter": {
                        "terms": [{
                                "ruleName": "lower",
                                "params": []
                            }, {
                                "ruleName": "upper",
                                "params": []
                            }, {
                                "ruleName": "unicodeLtmo",
                                "params": []
                            }
                        ]
                    },
                    "digit": {
                        "from": "0",
                        "to": "9"
                    },
                    "hexDigit": {
                        "terms": [{
                                "ruleName": "digit",
                                "params": []
                            }, {
                                "from": "a",
                                "to": "f"
                            }, {
                                "from": "A",
                                "to": "F"
                            }
                        ]
                    },
                    "ListOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "ListOf_none": {
                        "factors": []
                    },
                    "ListOf": {
                        "terms": [{
                                "ruleName": "ListOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "ListOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    },
                    "listOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "listOf_none": {
                        "factors": []
                    },
                    "listOf": {
                        "terms": [{
                                "ruleName": "listOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "listOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    }
                },
                "ruleFormals": {
                    "alnum": [],
                    "letter": [],
                    "digit": [],
                    "hexDigit": [],
                    "ListOf_some": ["elem", "sep"],
                    "ListOf_none": ["elem", "sep"],
                    "ListOf": ["elem", "sep"],
                    "listOf_some": ["elem", "sep"],
                    "listOf_none": ["elem", "sep"],
                    "listOf": ["elem", "sep"]
                },
                "ruleDescriptions": {
                    "alnum": "an alpha-numeric character",
                    "letter": "a letter",
                    "digit": "a digit",
                    "hexDigit": "a hexadecimal digit"
                },
                "ctors": {},
                "constructors": {}
            },
            "ruleBodies": {
                "Gen": {
                    "expr": {
                        "ruleName": "ReadRule",
                        "params": [],
                        "interval": {
                            "inputStream": {
                                "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                "pos": 117,
                                "posInfos": []
                            },
                            "startIdx": 22,
                            "endIdx": 30
                        }
                    },
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 22,
                        "endIdx": 31
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 7,
                        "endIdx": 31
                    }
                },
                "ReadRule": {
                    "terms": [{
                            "ruleName": "letters",
                            "params": [],
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 50,
                                "endIdx": 57
                            }
                        }, {
                            "ruleName": "symbols",
                            "params": [],
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 60,
                                "endIdx": 67
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 50,
                        "endIdx": 67
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 35,
                        "endIdx": 67
                    }
                },
                "letters": {
                    "terms": [{
                            "obj": "F",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 81,
                                "endIdx": 84
                            }
                        }, {
                            "obj": "G",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 87,
                                "endIdx": 90
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 81,
                        "endIdx": 90
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 70,
                        "endIdx": 90
                    }
                },
                "symbols": {
                    "terms": [{
                            "obj": "-",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 105,
                                "endIdx": 108
                            }
                        }, {
                            "obj": "+",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 111,
                                "endIdx": 114
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 105,
                        "endIdx": 114
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 94,
                        "endIdx": 114
                    }
                }
            },
            "ruleFormals": {
                "Gen": ["x", "y"],
                "ReadRule": [],
                "letters": [],
                "symbols": []
            },
            "ruleDescriptions": {},
            "defaultStartRule": "Gen",
            "ctors": {},
            "constructors": {},
            "definitionInterval": {
                "inputStream": {
                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                    "pos": 117,
                    "posInfos": []
                },
                "startIdx": 0,
                "endIdx": 116
            }
        },
        "Turtle": {
            "name": "Turtle",
            "superGrammar": {
                "name": "BuiltInRules",
                "superGrammar": {
                    "name": "ProtoBuiltInRules",
                    "ruleBodies": {
                        "any": {},
                        "end": {},
                        "spaces_": {
                            "expr": {
                                "ruleName": "space",
                                "params": []
                            }
                        },
                        "space": {
                            "from": "\u0000",
                            "to": " "
                        },
                        "lower": {
                            "category": "Ll",
                            "pattern": {}
                        },
                        "upper": {
                            "category": "Lu",
                            "pattern": {}
                        },
                        "unicodeLtmo": {
                            "category": "Ltmo",
                            "pattern": {}
                        }
                    },
                    "ruleFormals": {
                        "any": [],
                        "end": [],
                        "spaces_": [],
                        "space": [],
                        "lower": [],
                        "upper": [],
                        "unicodeLtmo": []
                    },
                    "ruleDescriptions": {
                        "any": "any object",
                        "end": "end of input",
                        "space": "a space",
                        "lower": "a lowercase letter",
                        "upper": "an uppercase letter"
                    },
                    "ctors": {},
                    "constructors": {}
                },
                "ruleBodies": {
                    "alnum": {
                        "terms": [{
                                "ruleName": "letter",
                                "params": []
                            }, {
                                "ruleName": "digit",
                                "params": []
                            }
                        ]
                    },
                    "letter": {
                        "terms": [{
                                "ruleName": "lower",
                                "params": []
                            }, {
                                "ruleName": "upper",
                                "params": []
                            }, {
                                "ruleName": "unicodeLtmo",
                                "params": []
                            }
                        ]
                    },
                    "digit": {
                        "from": "0",
                        "to": "9"
                    },
                    "hexDigit": {
                        "terms": [{
                                "ruleName": "digit",
                                "params": []
                            }, {
                                "from": "a",
                                "to": "f"
                            }, {
                                "from": "A",
                                "to": "F"
                            }
                        ]
                    },
                    "ListOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "ListOf_none": {
                        "factors": []
                    },
                    "ListOf": {
                        "terms": [{
                                "ruleName": "ListOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "ListOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    },
                    "listOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "listOf_none": {
                        "factors": []
                    },
                    "listOf": {
                        "terms": [{
                                "ruleName": "listOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "listOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    }
                },
                "ruleFormals": {
                    "alnum": [],
                    "letter": [],
                    "digit": [],
                    "hexDigit": [],
                    "ListOf_some": ["elem", "sep"],
                    "ListOf_none": ["elem", "sep"],
                    "ListOf": ["elem", "sep"],
                    "listOf_some": ["elem", "sep"],
                    "listOf_none": ["elem", "sep"],
                    "listOf": ["elem", "sep"]
                },
                "ruleDescriptions": {
                    "alnum": "an alpha-numeric character",
                    "letter": "a letter",
                    "digit": "a digit",
                    "hexDigit": "a hexadecimal digit"
                },
                "ctors": {},
                "constructors": {}
            },
            "ruleBodies": {
                "Draw": {
                    "expr": {
                        "terms": [{
                                "ruleName": "drawLetter",
                                "params": [],
                                "interval": {
                                    "inputStream": {
                                        "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                        "pos": 90,
                                        "posInfos": []
                                    },
                                    "startIdx": 27,
                                    "endIdx": 37
                                }
                            }, {
                                "ruleName": "turn",
                                "params": [],
                                "interval": {
                                    "inputStream": {
                                        "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                        "pos": 90,
                                        "posInfos": []
                                    },
                                    "startIdx": 40,
                                    "endIdx": 44
                                }
                            }
                        ],
                        "interval": {
                            "inputStream": {
                                "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                "pos": 90,
                                "posInfos": []
                            },
                            "startIdx": 27,
                            "endIdx": 44
                        }
                    },
                    "interval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 26,
                        "endIdx": 46
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 10,
                        "endIdx": 46
                    }
                },
                "drawLetter": {
                    "ruleName": "letter",
                    "params": [],
                    "interval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 62,
                        "endIdx": 68
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 50,
                        "endIdx": 68
                    }
                },
                "turn": {
                    "terms": [{
                            "obj": "+",
                            "interval": {
                                "inputStream": {
                                    "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                    "pos": 90,
                                    "posInfos": []
                                },
                                "startIdx": 78,
                                "endIdx": 81
                            }
                        }, {
                            "obj": "-",
                            "interval": {
                                "inputStream": {
                                    "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                    "pos": 90,
                                    "posInfos": []
                                },
                                "startIdx": 84,
                                "endIdx": 87
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 78,
                        "endIdx": 87
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 71,
                        "endIdx": 87
                    }
                }
            },
            "ruleFormals": {
                "Draw": ["x", "y"],
                "drawLetter": [],
                "turn": []
            },
            "ruleDescriptions": {},
            "defaultStartRule": "Draw",
            "ctors": {},
            "constructors": {},
            "definitionInterval": {
                "inputStream": {
                    "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                    "pos": 90,
                    "posInfos": []
                },
                "startIdx": 0,
                "endIdx": 89
            }
        },
        "___sourceAssetTimestamp": "Wed Jan 27 2016 20:47:44 GMT+0300 (MSK)",
        "angle": 90,
        "axiomF": "F+G+",
        "axiomG": "-F-G",
        "iteration": 10,
        "materialDef": {
            "shininess": 15,
            "alpha": 1,
            "ambient": {
                "r": 1,
                "g": 1,
                "b": 1
            },
            "color": {
                "r": 1,
                "g": 1,
                "b": 1,
                "a": 1
            },
            "emit": {
                "r": 0,
                "g": 0,
                "b": 0
            },
            "reflect": 0.8,
            "shadeless": false,
            "shadow": true,
            "specularColor": {
                "r": 0.5773502691896258,
                "g": 0.5773502691896258,
                "b": 0.5773502691896258,
                "a": 1
            },
            "specularLevel": 1,
            "layers": [{
                    "alpha": 1,
                    "blendMode": 0,
                    "mapInput": 0,
                    "mapTo": 1,
                    "offsetx": 0,
                    "offsety": 0,
                    "rot": 0,
                    "scalex": 1,
                    "scaley": 1,
                    "src": "checker.jpg"
                }
            ],
            "type": "phong",
            "side": 0,
            "blendMode": 1,
            "fog": true,
            "shading": true,
            "metal": false,
            "wireframe": false,
            "depthtest": true,
            "depthwrite": true,
            "vertexColors": false
        },
        "ohmLSys": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
        "ohmTurtle": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
        "owner": "admin",
        "rotation": [0, 0, 1, 0],
        "rule": "F",
        "scale": [1, 1, 1],
        "size": [1, 1, 1],
        "tempid": "",
        "texture": "checker.jpg",
        "transform": [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -1, -0.75, 0, 1],
        "type": "Primitive"
    },
    "random": {
        "c": 1,
        "s0": 0.123107210965827,
        "s1": 0.233153729932383,
        "s2": 0.156422814819962
    },
    "sequence": 0,
    "source": "vwf/model/threejs/turtle.js",
    "type": "subDriver/threejs"
}