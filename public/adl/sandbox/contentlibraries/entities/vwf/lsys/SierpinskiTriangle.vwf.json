{
    "children": {
        "N1e9e62b4": {
            "extends": "line2.vwf",
            "properties": {
                "DisplayName": "pen",
                "materialDef": {
                    "shininess": 15,
                    "alpha": 1,
                    "ambient": {
                        "r": 1,
                        "g": 1,
                        "b": 1
                    },
                    "color": {
                        "r": 1,
                        "g": 1,
                        "b": 1,
                        "a": 1
                    },
                    "emit": {
                        "r": 0,
                        "g": 0,
                        "b": 0
                    },
                    "reflect": 0.8,
                    "shadeless": false,
                    "shadow": true,
                    "specularColor": {
                        "r": 0.5773502691896258,
                        "g": 0.5773502691896258,
                        "b": 0.5773502691896258
                    },
                    "specularLevel": 1,
                    "layers": [{
                            "alpha": 1,
                            "blendMode": 0,
                            "mapInput": 0,
                            "mapTo": 1,
                            "offsetx": 0,
                            "offsety": 0,
                            "rot": 0,
                            "scalex": 1,
                            "scaley": 1,
                            "src": "checker.jpg"
                        }
                    ]
                },
                "owner": "admin",
                "points": [
                    [1, 0, 0],
                    [0.500000000828288, 0.8660254042626511, 0],
                    [-8.282881047705359e-10, 1.43463707580338e-9, 0],
                    [0.9999999991717119, -1.4346369092699263e-9, 0],
                    [0.5000000024848641, 0.8660254042626512, 0],
                    [-1.6565762095410719e-9, 2.86927415160676e-9, 0],
                    [0.9999999983434238, -2.869273818539851e-9, 0],
                    [0.5000000041414401, 0.8660254042626512, 0],
                    [-2.484864314311608e-9, 4.303911116387837e-9, 0],
                    [0.9999999975151357, -4.303910783320928e-9, 0],
                    [0.5000000057980161, 0.8660254042626512, 0],
                    [-3.3131525301044462e-9, 5.738548081168915e-9, 0],
                    [0.9999999966868475, -5.738547803613159e-9, 0],
                    [1.9999999966868476, -1.7215643688395232e-8, 0],
                    [1.5000000074545923, 0.8660253927855551, 0],
                    [0.9999999958585597, -4.3039108943432325e-9, 0],
                    [1.9999999958585597, -1.865028065317631e-8, 0],
                    [1.5000000091111683, 0.8660253927855552, 0],
                    [0.9999999950302716, -2.86927370751755e-9, 0],
                    [1.9999999950302714, -2.0084917395912782e-8, 0],
                    [1.5000000107677443, 0.8660253927855553, 0],
                    [0.9999999942019836, -1.4346365206918676e-9, 0],
                    [1.9999999942019833, -2.1519554083138104e-8, 0],
                    [1.5000000124243202, 0.8660253927855555, 0],
                    [0.9999999933736955, 3.3306690738754696e-16, 0],
                    [1.9999999933736954, -2.2954191103430333e-8, 0],
                    [1.5000000140808964, 0.8660253927855555, 0],
                    [1.0000000347880973, 1.732050808525302, 0],
                    [0.5000000132526085, 0.8660254171743837, 0],
                    [1.5000000132526081, 0.8660253913509184, 0],
                    [1.0000000364446733, 1.732050808525302, 0],
                    [0.5000000124243205, 0.8660254186090209, 0],
                    [1.5000000124243202, 0.8660253899162818, 0],
                    [1.0000000381012495, 1.732050808525302, 0],
                    [0.5000000115960326, 0.866025420043658, 0],
                    [1.5000000115960321, 0.8660253884816449, 0],
                    [1.0000000397578255, 1.732050808525302, 0],
                    [0.5000000107677446, 0.8660254214782949, 0],
                    [1.500000010767744, 0.8660253870470078, 0],
                    [1.0000000414144017, 1.732050808525302, 0],
                    [0.5000000099394567, 0.8660254229129319, 0],
                    [-2.153548828154328e-8, 3.7300561972486435e-8, 0],
                    [0.999999978464511, 9.992007287800858e-16, 0],
                    [1.9999999784645104, -3.730055997408498e-8, 0],
                    [2.9999999784645097, -7.460112094737068e-8, 0],
                    [3.9999999784645093, -1.1190168192065639e-7, 0],
                    [3.5000000115960312, 0.866025311011249, 0],
                    [2.999999977636222, -7.316648387156732e-8, 0],
                    [3.9999999776362216, -1.1333631882992634e-7, 0],
                    [3.5000000132526075, 0.8660253110112488, 0],
                    [2.9999999768079344, -7.173184701780855e-8, 0],
                    [3.9999999768079335, -1.1477095590572972e-7, 0],
                    [3.5000000149091837, 0.8660253110112488, 0],
                    [2.9999999759796463, -7.029721005302747e-8, 0],
                    [3.9999999759796454, -1.162055928705108e-7, 0],
                    [3.5000000165657594, 0.8660253110112486, 0],
                    [2.999999975151358, -6.886257308824639e-8, 0],
                    [3.999999975151357, -1.1764022972426956e-7, 0],
                    [3.500000018222335, 0.8660253110112486, 0],
                    [3.0000000612933135, 1.7320507396627267, 0],
                    [2.5000000173940484, 0.866025361223542, 0],
                    [3.500000017394047, 0.8660253095766115, 0],
                    [3.0000000629498897, 1.7320507396627265, 0],
                    [2.5000000165657608, 0.866025362658179, 0],
                    [3.5000000165657594, 0.8660253081419746, 0],
                    [3.000000064606466, 1.7320507396627265, 0],
                    [2.5000000157374727, 0.8660253640928158, 0],
                    [3.500000015737471, 0.8660253067073378, 0],
                    [3.0000000662630413, 1.7320507396627263, 0],
                    [2.5000000149091846, 0.8660253655274529, 0],
                    [3.5000000149091828, 0.866025305272701, 0],
                    [3.0000000679196175, 1.7320507396627263, 0],
                    [2.5000000140808964, 0.8660253669620898, 0],
                    [1.9999999602421756, -5.738546748901285e-9, 0],
                    [2.9999999602421736, -6.886257236660141e-8, 0],
                    [2.5000000157374727, 0.8660253669620895, 0],
                    [1.9999999594138882, -4.303909784120208e-9, 0],
                    [2.999999959413886, -7.02972091093379e-8, 0],
                    [2.500000017394049, 0.8660253669620894, 0],
                    [1.9999999585856005, -2.869272930361433e-9, 0],
                    [2.9999999585855983, -7.173184596309666e-8, 0],
                    [2.500000019050625, 0.8660253669620895, 0],
                    [1.9999999577573124, -1.4346358545580529e-9, 0],
                    [2.9999999577573098, -7.316648276134428e-8, 0],
                    [2.5000000207072004, 0.8660253669620894, 0],
                    [1.999999956929024, 1.1102230246251565e-15, 0],
                    [2.999999956929021, -7.460111950408077e-8, 0],
                    [3.9999999569290186, -1.4920224011838457e-7, 0],
                    [3.5000000223637735, 0.8660252923609687, 0],
                    [3.0000000877985284, 1.7320507339241775, 0],
                    [2.5000001532332834, 2.5980761754873862, 0],
                    [2.0000002186680383, 3.464101617050595, 0],
                    [1.500000152404998, 2.598076251523144, 0],
                    [2.5000001524049953, 2.5980761740527494, 0],
                    [2.0000002203246146, 3.464101617050595, 0],
                    [1.5000001515767103, 2.598076252957781, 0],
                    [2.500000151576707, 2.5980761726181125, 0],
                    [2.0000002219811908, 3.464101617050595, 0],
                    [1.5000001507484224, 2.598076254392418, 0],
                    [2.500000150748419, 2.5980761711834757, 0],
                    [2.0000002236377665, 3.464101617050595, 0],
                    [1.5000001499201343, 2.598076255827055, 0],
                    [2.500000149920131, 2.598076169748839, 0],
                    [2.0000002252943427, 3.464101617050595, 0],
                    [1.5000001490918464, 2.5980762572616922, 0],
                    [1.0000000728893501, 1.7320508974727895, 0],
                    [2.000000072889346, 1.7320508085252992, 0],
                    [1.5000001507484222, 2.5980762572616922, 0],
                    [1.000000072061062, 1.7320508989074268, 0],
                    [2.000000072061058, 1.7320508070906626, 0],
                    [1.5000001524049984, 2.5980762572616922, 0],
                    [1.0000000712327743, 1.7320509003420637, 0],
                    [2.0000000712327703, 1.7320508056560255, 0],
                    [1.5000001540615748, 2.598076257261692, 0],
                    [1.0000000704044867, 1.7320509017767005, 0],
                    [2.0000000704044822, 1.7320508042213887, 0],
                    [1.500000155718151, 2.598076257261692, 0],
                    [1.000000069576199, 1.7320509032113378, 0],
                    [2.000000069576194, 1.732050802786752, 0],
                    [3.0000000695761893, 1.7320507023621663, 0],
                    [2.500000157374722, 2.598076156837106, 0],
                    [2.000000068747906, 1.7320508042213891, 0],
                    [3.000000068747901, 1.7320507009275294, 0],
                    [2.5000001590312984, 2.598076156837106, 0],
                    [2.0000000679196184, 1.732050805656026, 0],
                    [3.000000067919613, 1.7320506994928924, 0],
                    [2.5000001606878746, 2.5980761568371054, 0],
                    [2.0000000670913307, 1.7320508070906628, 0],
                    [3.000000067091325, 1.7320506980582553, 0],
                    [2.5000001623444508, 2.598076156837105, 0],
                    [2.000000066263043, 1.7320508085252997, 0],
                    [3.0000000662630373, 1.732050696623618, 0],
                    [2.5000001640010274, 2.5980761568371045, 0],
                    [2.0000002617390176, 3.464101617050591, 0],
                    [1.5000001631727455, 2.598076270173423, 0],
                    [1.0000000646064735, 1.732050923296255, 0],
                    [0.49999996604020147, 0.8660255764190871, 0],
                    [-1.3252607056202237e-7, 2.295419190279091e-7, 0],
                    [0.9999998674739233, 1.1477096351075747e-7, 0],
                    [1.9999998674739172, 7.993605830240686e-15, 0],
                    [2.9999998674739112, -1.147709475235458e-7, 0],
                    [3.999999867473905, -2.2954190304069744e-7, 0],
                    [4.999999867473899, -3.443128585578491e-7, 0],
                    [5.999999867473893, -4.5908381407500077e-7, 0],
                    [6.999999867473886, -5.738547695921524e-7, 0],
                    [7.99999986747388, -6.886257251093041e-7, 0],
                    [7.499999967696734, 0.8660247730223982, 0],
                    [6.999999866645599, -5.724201325163492e-7, 0],
                    [7.9999998666455925, -6.900603619075518e-7, 0],
                    [7.499999969353311, 0.866024773022398, 0],
                    [6.999999865817311, -5.709854954405458e-7, 0],
                    [7.999999865817304, -6.914949988723329e-7, 0],
                    [7.499999971009887, 0.8660247730223978, 0],
                    [6.9999998649890225, -5.695508583647424e-7, 0],
                    [7.999999864989015, -6.929296356150694e-7, 0],
                    [7.499999972666463, 0.8660247730223976, 0],
                    [6.999999864160735, -5.68116221288939e-7, 0],
                    [7.999999864160727, -6.943642725798505e-7, 0],
                    [7.499999974323038, 0.8660247730223973, 0],
                    [7.000000084485349, 1.7320502404090672, 0],
                    [6.4999999734947576, 0.8660249007050856, 0],
                    [7.49999997349475, 0.8660247715877604, 0],
                    [7.000000086141926, 1.732050240409067, 0],
                    [6.49999997266647, 0.8660249021397228, 0],
                    [7.499999972666462, 0.8660247701531236, 0],
                    [7.000000087798502, 1.732050240409067, 0],
                    [6.499999971838182, 0.8660249035743601, 0],
                    [7.499999971838173, 0.866024768718487, 0],
                    [7.000000089455078, 1.732050240409067, 0],
                    [6.499999971009895, 0.8660249050089975, 0],
                    [7.499999971009886, 0.8660247672838502, 0],
                    [7.000000091111654, 1.7320502404090667, 0],
                    [6.499999970181607, 0.8660249064436345, 0],
                    [5.99999984925156, -4.275217977411927e-7, 0],
                    [6.99999984925155, -5.681162190129818e-7, 0],
                    [6.499999971838183, 0.8660249064436341, 0],
                    [5.999999848423272, -4.260871607764116e-7, 0],
                    [6.999999848423262, -5.695508559222517e-7, 0],
                    [6.49999997349476, 0.866024906443634, 0],
                    [5.999999847594984, -4.2465252358958594e-7, 0],
                    [6.9999998475949745, -5.709854928870328e-7, 0],
                    [6.499999975151336, 0.8660249064436338, 0],
                    [5.999999846766697, -4.2321788640276026e-7, 0],
                    [6.999999846766686, -5.724201297963027e-7, 0],
                    [6.499999976807913, 0.8660249064436336, 0],
                    [5.999999845938409, -4.217832492159346e-7, 0],
                    [6.999999845938397, -5.738547665390392e-7, 0],
                    [7.999999845938387, -7.259262838621439e-7, 0],
                    [7.499999978464477, 0.8660247543721161, 0],
                    [7.000000110990568, 1.732050234670516, 0],
                    [6.500000243516658, 2.5980757149689158, 0],
                    [6.000000376042749, 3.4641011952673155, 0],
                    [5.500000242688381, 2.59807586847507, 0],
                    [6.50000024268837, 2.598075713534279, 0],
                    [6.000000377699325, 3.4641011952673155, 0],
                    [5.500000241860094, 2.5980758699097075, 0],
                    [6.500000241860082, 2.598075712099642, 0],
                    [6.000000379355901, 3.464101195267315, 0],
                    [5.500000241031806, 2.5980758713443444, 0],
                    [6.500000241031794, 2.598075710665005, 0],
                    [6.000000381012478, 3.4641011952673146, 0],
                    [5.500000240203518, 2.598075872778981, 0],
                    [6.500000240203506, 2.5980757092303683, 0],
                    [6.000000382669054, 3.4641011952673146, 0],
                    [5.500000239375231, 2.5980758742136185, 0],
                    [5.000000096081408, 1.7320505531599224, 0],
                    [6.000000096081394, 1.7320503867420356, 0],
                    [5.500000241031807, 2.5980758742136185, 0],
                    [5.00000009525312, 1.7320505545945597, 0],
                    [6.000000095253107, 1.7320503853073987, 0],
                    [5.500000242688384, 2.598075874213618, 0],
                    [5.000000094424833, 1.732050556029197, 0],
                    [6.000000094424819, 1.7320503838727621, 0],
                    [5.50000024434496, 2.5980758742136176, 0],
                    [5.000000093596546, 1.7320505574638339, 0],
                    [6.0000000935965305, 1.7320503824381248, 0],
                    [5.5000002460015365, 2.598075874213617, 0],
                    [5.000000092768258, 1.7320505588984711, 0],
                    [6.000000092768243, 1.7320503810034882, 0],
                    [7.000000092768227, 1.7320502031085052, 0],
                    [6.500000247658098, 2.598075696318634, 0],
                    [6.000000091939955, 1.7320503824381253, 0],
                    [7.000000091939939, 1.7320502016738684, 0],
                    [6.500000249314674, 2.5980756963186336, 0],
                    [6.0000000911116675, 1.7320503838727621, 0],
                    [7.000000091111651, 1.7320502002392315, 0],
                    [6.50000025097125, 2.5980756963186336, 0],
                    [6.00000009028338, 1.7320503853073994, 0],
                    [7.000000090283363, 1.7320501988045947, 0],
                    [6.500000252627826, 2.5980756963186327, 0],
                    [6.000000089455092, 1.732050386742036, 0],
                    [7.0000000894550745, 1.7320501973699578, 0],
                    [6.500000254284402, 2.5980756963186327, 0],
                    [6.00000041911373, 3.4641011952673075, 0],
                    [5.5000002534561325, 2.5980758871253484, 0],
                    [5.000000087798535, 1.7320505789833893, 0],
                    [4.499999922140937, 0.8660252708414301, 0],
                    [3.999999756483339, -3.7300529109884906e-8, 0],
                    [4.999999756483321, -2.2954188133583742e-7, 0],
                    [4.499999923797513, 0.86602527084143, 0],
                    [3.9999997556550513, -3.586589170101462e-8, 0],
                    [4.999999755655033, -2.3097651796755159e-7, 0],
                    [4.499999925454089, 0.8660252708414298, 0],
                    [3.999999754826764, -3.443125462521124e-8, 0],
                    [4.999999754826745, -2.3241115465477688e-7, 0],
                    [4.499999927110665, 0.8660252708414296, 0],
                    [3.9999997539984764, -3.299661754940786e-8, 0],
                    [4.999999753998456, -2.3384579150853563e-7, 0],
                    [4.499999928767242, 0.8660252708414292, 0],
                    [3.9999997531701887, -3.156198058462678e-8, 0],
                    [4.999999753170169, -2.3528042836229446e-7, 0],
                    [5.999999753170148, -4.3899887613996214e-7, 0],
                    [5.499999930423797, 0.866025067122981, 0],
                    [4.99999975234188, -2.3384579128649108e-7, 0],
                    [5.999999752341859, -4.4043351299372086e-7, 0],
                    [5.499999932080373, 0.8660250671229806, 0],
                    [4.9999997515135925, -2.324111539886431e-7, 0],
                    [5.999999751513571, -4.4186814979196853e-7, 0],
                    [5.49999993373695, 0.8660250671229801, 0],
                    [4.999999750685306, -2.3097651691283971e-7, 0],
                    [5.999999750685284, -4.433027865902161e-7, 0],
                    [5.499999935393526, 0.8660250671229798, 0],
                    [4.999999749857018, -2.2954187972601403e-7, 0],
                    [5.999999749856995, -4.4473742333295263e-7, 0],
                    [5.499999937050102, 0.8660250671229794, 0],
                    [5.0000001242432095, 1.7320505789833822, 0],
                    [4.499999936221838, 0.8660252837531602, 0],
                    [5.499999936221814, 0.8660250656883427, 0],
                    [5.000000125899785, 1.7320505789833818, 0],
                    [4.499999935393549, 0.8660252851877972, 0],
                    [5.499999935393525, 0.8660250642537058, 0],
                    [5.000000127556361, 1.7320505789833813, 0],
                    [4.4999999345652615, 0.8660252866224343, 0],
                    [5.499999934565237, 0.8660250628190691, 0],
                    [5.000000129212937, 1.7320505789833809, 0],
                    [4.499999933736974, 0.8660252880570712, 0],
                    [5.499999933736948, 0.866025061384432, 0],
                    [5.000000130869513, 1.7320505789833804, 0],
                    [4.499999932908685, 0.8660252894917083, 0],
                    [3.9999997349478584, 3.6193270602780103e-14, 0],
                    [4.999999734947832, -2.2954187683943417e-7, 0],
                    [5.9999997349478065, -4.5908378987213894e-7, 0],
                    [6.999999734947781, -6.886257029048437e-7, 0],
                    [7.999999734947755, -9.181676159375485e-7, 0],
                    [7.499999934565184, 0.8660246008659687, 0],
                    [7.0000001341826135, 1.7320501198995533, 0],
                    [6.500000333800043, 2.598075638933138, 0],
                    [6.000000533417472, 3.4641011579667227, 0],
                    [5.500000733034901, 4.330126677000307, 0],
                    [5.0000009326523305, 5.196152196033892, 0],
                    [4.50000113226976, 6.0621777150674765, 0],
                    [4.000001331887189, 6.928203234101061, 0],
                    [3.5000011314414983, 6.062177946044026, 0],
                    [4.500001131441472, 6.062177713632839, 0],
                    [4.000001333543766, 6.92820323410106, 0],
                    [3.5000011306132115, 6.062177947478663, 0],
                    [4.500001130613184, 6.062177712198202, 0],
                    [4.000001335200342, 6.928203234101059, 0],
                    [3.500001129784924, 6.0621779489133, 0],
                    [4.500001129784896, 6.0621777107635655, 0],
                    [4.0000013368569185, 6.928203234101059, 0],
                    [3.500001128956636, 6.062177950347937, 0],
                    [4.500001128956607, 6.062177709328928, 0],
                    [4.000001338513495, 6.928203234101058, 0],
                    [3.5000011281283485, 6.062177951782575, 0],
                    [3.0000009177432023, 5.196152669464091, 0],
                    [4.000000917743173, 5.196152425575808, 0],
                    [3.5000011297849247, 6.062177951782575, 0],
                    [3.0000009169149147, 5.196152670898728, 0],
                    [4.0000009169148845, 5.196152424141172, 0],
                    [3.5000011314415005, 6.062177951782575, 0],
                    [3.000000916086627, 5.1961526723333655, 0],
                    [4.000000916086596, 5.196152422706534, 0],
                    [3.5000011330980767, 6.062177951782574, 0],
                    [3.0000009152583393, 5.196152673768003, 0],
                    [4.000000915258308, 5.196152421271898, 0],
                    [3.500001134754654, 6.062177951782574, 0],
                    [3.0000009144300526, 5.19615267520264, 0],
                    [4.000000914430021, 5.1961524198372615, 0],
                    [5.000000914429989, 5.196152164471883, 0],
                    [4.500001136411198, 6.062177696417195, 0],
                    [4.000000913601733, 5.196152421271899, 0],
                    [5.0000009136017, 5.196152163037246, 0],
                    [4.500001138067774, 6.062177696417194, 0],
                    [4.000000912773445, 5.196152422706536, 0],
                    [5.0000009127734115, 5.196152161602609, 0],
                    [4.5000011397243505, 6.062177696417194, 0],
                    [4.000000911945158, 5.196152424141173, 0],
                    [5.000000911945123, 5.196152160167973, 0],
                    [4.500001141380927, 6.062177696417194, 0],
                    [4.00000091111687, 5.196152425575811, 0],
                    [5.000000911116834, 5.1961521587333355, 0],
                    [4.500001143037502, 6.062177696417193, 0],
                    [4.0000013749581695, 6.928203234101051, 0],
                    [3.5000011422092494, 6.062177964694306, 0],
                    [3.0000009094603293, 5.1961526952875605, 0],
                    [2.500000676711409, 4.330127425880815, 0],
                    [2.000000443962489, 3.4641021564740697, 0],
                    [3.000000443962453, 3.464101886762321, 0],
                    [2.5000006783679853, 4.330127425880814, 0],
                    [2.0000004431342013, 3.464102157908706, 0],
                    [3.0000004431341645, 3.4641018853276835, 0],
                    [2.500000680024561, 4.330127425880813, 0],
                    [2.0000004423059137, 3.464102159343343, 0],
                    [3.000000442305876, 3.464101883893046, 0],
                    [2.5000006816811373, 4.3301274258808125, 0],
                    [2.000000441477626, 3.46410216077798, 0],
                    [3.000000441477588, 3.4641018824584093, 0],
                    [2.5000006833377135, 4.3301274258808125, 0],
                    [2.0000004406493384, 3.4641021622126176, 0],
                    [3.0000004406492993, 3.464101881023773, 0],
                    [4.00000044064926, 3.4641015998349283, 0],
                    [3.5000006849942507, 4.330127144691968, 0],
                    [3.0000004398210116, 3.4641018824584107, 0],
                    [4.000000439820972, 3.4641015984002923, 0],
                    [3.5000006866508264, 4.330127144691968, 0],
                    [3.000000438992724, 3.464101883893048, 0],
                    [4.000000438992683, 3.4641015969656554, 0],
                    [3.5000006883074026, 4.330127144691967, 0],
                    [3.0000004381644363, 3.4641018853276853, 0],
                    [4.0000004381643945, 3.464101595531019, 0],
                    [3.5000006899639784, 4.330127144691967, 0],
                    [3.0000004373361486, 3.4641018867623226, 0],
                    [4.000000437336106, 3.464101594096382, 0],
                    [3.5000006916205546, 4.330127144691966, 0],
                    [3.000000945905003, 5.19615269528755, 0],
                    [2.5000006907923096, 4.330127438792544, 0],
                    [3.500000690792266, 4.33012714325733, 0],
                    [3.0000009475615794, 5.19615269528755, 0],
                    [2.500000689964022, 4.330127440227181, 0],
                    [3.5000006899639775, 4.330127141822692, 0],
                    [3.000000949218155, 5.196152695287549, 0],
                    [2.5000006891357343, 4.330127441661818, 0],
                    [3.500000689135689, 4.330127140388056, 0],
                    [3.0000009508747314, 5.196152695287549, 0],
                    [2.5000006883074466, 4.330127443096456, 0],
                    [3.5000006883074004, 4.3301271389534195, 0],
                    [3.000000952531307, 5.196152695287548, 0],
                    [2.500000687479159, 4.330127444531093, 0],
                    [2.0000004224270107, 3.4641021937746372, 0],
                    [3.0000004224269636, 3.464101886762327, 0],
                    [4.000000422426917, 3.464101579750017, 0],
                    [5.0000004224268695, 3.4641012727377074, 0],
                    [6.000000422426822, 3.4641009657253976, 0],
                    [5.500000689135594, 4.330126523494163, 0],
                    [5.000000421598582, 3.4641012741723447, 0],
                    [6.000000421598534, 3.4641009642907608, 0],
                    [5.500000690792169, 4.330126523494162, 0],
                    [5.000000420770293, 3.4641012756069816, 0],
                    [6.000000420770244, 3.464100962856124, 0],
                    [5.500000692448745, 4.330126523494162, 0],
                    [5.000000419942006, 3.4641012770416193, 0],
                    [6.000000419941956, 3.464100961421488, 0],
                    [5.500000694105321, 4.330126523494162, 0],
                    [5.000000419113718, 3.464101278476257, 0],
                    [6.000000419113667, 3.464100959986852, 0],
                    [5.500000695761896, 4.330126523494162, 0],
                    [5.000000972410126, 5.1961520870014715, 0],
                    [4.500000694933659, 4.3301268434182045, 0],
                    [5.5000006949336075, 4.330126522059525, 0],
                    [5.000000974066701, 5.1961520870014715, 0],
                    [4.500000694105371, 4.330126844852842, 0],
                    [5.500000694105319, 4.330126520624889, 0],
                    [5.000000975723277, 5.196152087001471, 0],
                    [4.500000693277084, 4.330126846287479, 0],
                    [5.5000006932770305, 4.330126519190252, 0],
                    [5.0000009773798535, 5.19615208700147, 0],
                    [4.500000692448796, 4.3301268477221155, 0],
                    [5.500000692448742, 4.330126517755614, 0],
                    [5.00000097903643, 5.196152087001469, 0],
                    [4.500000691620508, 4.330126849156753, 0],
                    [4.000000404204587, 3.464101611312037, 0],
                    [5.000000404204532, 3.464101278476262, 0],
                    [4.500000693277085, 4.330126849156753, 0],
                    [4.0000004033762995, 3.4641016127466746, 0],
                    [5.0000004033762435, 3.4641012770416255, 0],
                    [4.50000069493366, 4.330126849156752, 0],
                    [4.000000402548012, 3.4641016141813115, 0],
                    [5.000000402547955, 3.4641012756069887, 0],
                    [4.500000696590236, 4.330126849156751, 0],
                    [4.000000401719724, 3.4641016156159483, 0],
                    [5.000000401719666, 3.464101274172352, 0],
                    [4.500000698246812, 4.33012684915675, 0],
                    [4.0000004008914365, 3.464101617050585, 0],
                    [5.000000400891378, 3.4641012727377145, 0],
                    [6.000000400891319, 3.464100928424844, 0],
                    [5.50000069990333, 4.330126504843879, 0],
                    [5.000000998915341, 5.196152081262913, 0],
                    [4.500001297927351, 6.062177657681948, 0],
                    [4.000001596939362, 6.928203234100983, 0],
                    [3.500001297099123, 6.062178003429456, 0],
                    [3.0000009972588844, 5.196152772757929, 0],
                    [2.5000006974186455, 4.3301275420864025, 0],
                    [2.0000003975784066, 3.4641023114148757, 0],
                    [1.5000000977381676, 2.598077080743349, 0],
                    [0.9999997978979285, 1.732051850071822, 0],
                    [0.4999994980576894, 0.8660266194002951, 0],
                    [-8.017825496864361e-7, 0.0000013887287682035065, 0]
                ],
                "rotation": [0, 0, 1, 0],
                "scale": [1, 1, 1],
                "size": [1, 1, 1],
                "tempid": "Nf91f9a30",
                "texture": "checker.jpg",
                "transform": [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0.0010000000474974513, 1],
                "type": "Spline"
            },
            "random": {
                "c": 1,
                "s0": 0.0661602972541004,
                "s1": 0.817958290921524,
                "s2": 0.895724789472297
            },
            "sequence": 0,
            "source": "vwf/model/threejs/line.js",
            "type": "subDriver/threejs"
        }
    },
    "extends": "turtle2.vwf",
    "methods": {
        "forceUpdate": {
            "body": "console.log('Force to update old source code!');\nvar methods = Engine.getMethods(this.id);\nvar nodeMethodsToDel = ['genLSys', 'initGrammarLSys', 'initGrammarTurtle', 'initLSysSemantics', 'initTurtleSemantics'];\nfor (var i in nodeMethodsToDel)\n{\n    if (methods[nodeMethodsToDel[i]] !== undefined)\n    {\n        var methodName = nodeMethodsToDel[i];\n        Engine.deleteMethod(this.id, methodName);\n    }\n}\nvar nodeMethods = ['genLSys', 'initGrammarLSys', 'initGrammarTurtle', 'initSemanticsLSys', 'initSemanticsTurtle'];\nvar methodsNew = Engine.getMethods(this.id);\nfor (var i in nodeMethods)\n{\n    if (methodsNew[nodeMethods[i]] === undefined)\n    {\n        var methodName = nodeMethods[i];\n        var prot = Engine.getMethods(Engine.prototype(this.id))[methodName];\n        Engine.createMethod(this.id, methodName, [], prot.body);\n    }\n}\n        Engine.deleteMethod(this.id, 'makeTurtle');\n        var prot = Engine.getMethods(Engine.prototype(this.id))['makeTurtle'];\n        Engine.createMethod(this.id, 'makeTurtle', prot.parameters, prot.body);\n",
            "parameters": []
        },
        "genLSys": {
            "body": "var gram = _LangManager.ohmLangs[this.id][\"LSys\"][\"grammar\"];\nvar sem = _LangManager.ohmLangs[this.id][\"LSys\"][\"semantics\"];\nvar str = this.rule;\nvar axioms = {\"F\": this.axiomF, \"G\": this.axiomG};\nfor (var i = 1; i < this.iteration; i++)\n{\n    var r = gram.match(str);\n    var n = sem(r);\n    var res = n.gen(axioms);\n    str = res.join(\"\");\n}\nreturn str;\n",
            "parameters": []
        },
        "generateLSys": {
            "body": "if (this.children_by_name.pen !== undefined)\n  {\n  this.resetLS();\n  var oldPos = this.transformAPI.getWorldPosition();\n  var oldRot = this.transformAPI.getRotation();\n  this.transformAPI.setPosition(0, 0, 0);\n  this.transformAPI.setRotation(0, 0, 0);\n  var lsys = this.genLSys();\n  var turtle = this.makeTurtle(lsys);\n  turtle.draw(this.stepLength, this.angle);\n  this.transformAPI.setPosition(oldPos);\n  this.transformAPI.setRotation(oldRot);\n  }\n",
            "parameters": []
        },
        "goForward": {
            "body": "this.transformAPI.move(step, 0, 0, \"local\");\nvar pos = this.transformAPI.getPosition();\npos = new THREE.Vector3(pos[0], pos[1], pos[2]);\nthis.children_by_name.pen.points.push([pos.x, pos.y, pos.z]);\n",
            "parameters": ["step"]
        },
        "initGrammarLSys": {
            "body": "console.log('Init grammar: LSys');\nthis.initSemanticsLSys();\n",
            "parameters": []
        },
        "initGrammarTurtle": {
            "body": "console.log('Init grammar: Turtle');\nthis.initSemanticsTurtle();\n",
            "parameters": []
        },
        "initSemanticsLSys": {
            "body": "var s = _LangManager.ohmLangs[this.id][\"LSys\"][\"semantics\"];\ns.addOperation('gen(x)',\n{\n    Gen: function(e)\n    {\n        return e.gen(this.args.x);\n    },\n    ReadRule: function(e)\n    {\n        return e.gen(this.args.x);\n    },\n    letters: function(_)\n    {\n        for (var propName in this.args.x)\n        {\n            if (propName == this.interval.contents)\n                return this.args.x[propName]\n        }\n        return this.interval.contents\n    },\n    symbols: function(_)\n    {\n        return this.interval.contents;\n    }\n});\n",
            "parameters": []
        },
        "initSemanticsTurtle": {
            "body": "var myID = this.id;\nvar s = _LangManager.ohmLangs[this.id][\"Turtle\"][\"semantics\"];\ns.addOperation('draw(x,y)',\n{\n    Draw: function(e)\n    {\n        e.draw(this.args.x, this.args.y);\n    },\n    drawLetter: function(e)\n    {\n        Engine.callMethod(myID, 'goForward', [this.args.x]);\n    },\n    turn: function(e)\n    {\n        if (this.interval.contents == \"+\")\n            Engine.callMethod(myID, 'turn', [this.args.y]);\n        if (this.interval.contents == \"-\")\n            Engine.callMethod(myID, 'turn', [-1 * this.args.y]);\n       }\n  });\n",
            "parameters": []
        },
        "makeLSys": {
            "body": "var lsys = this.genLSys();\nvar turtle = this.makeTurtle(lsys);\nthis.resetLS();\nvar oldPos = this.transformAPI.getWorldPosition();\nthis.transformAPI.setPosition(0, 0, 0);\nturtle.draw(this.stepLength, this.angle);\nthis.transformAPI.setPosition(oldPos);\n",
            "parameters": []
        },
        "makeTurtle": {
            "body": "var gram = _LangManager.ohmLangs[this.id][\"Turtle\"][\"grammar\"];\nvar sem = _LangManager.ohmLangs[this.id][\"Turtle\"][\"semantics\"];\nvar r = gram.match(lsys);\nvar n = sem(r);\nreturn n;",
            "parameters": ["lsys"]
        },
        "ready": {
            "body": "if (this.methods.hasOwnProperty('initLSysSemantics')){\n  this.forceUpdate();\n}\nthis.initGrammarLSys();\nthis.initGrammarTurtle();\nthis.generateLSys();\n",
            "parameters": []
        },
        "turn": {
            "body": "this.transformAPI.rotateZ(angle, \"local\");\n",
            "parameters": ["angle"]
        }
    },
    "properties": {
        "DisplayName": "turtle1",
        "LSys": {
            "name": "LSys",
            "superGrammar": {
                "name": "BuiltInRules",
                "superGrammar": {
                    "name": "ProtoBuiltInRules",
                    "ruleBodies": {
                        "any": {},
                        "end": {},
                        "spaces_": {
                            "expr": {
                                "ruleName": "space",
                                "params": []
                            }
                        },
                        "space": {
                            "from": "\u0000",
                            "to": " "
                        },
                        "lower": {
                            "category": "Ll",
                            "pattern": {}
                        },
                        "upper": {
                            "category": "Lu",
                            "pattern": {}
                        },
                        "unicodeLtmo": {
                            "category": "Ltmo",
                            "pattern": {}
                        }
                    },
                    "ruleFormals": {
                        "any": [],
                        "end": [],
                        "spaces_": [],
                        "space": [],
                        "lower": [],
                        "upper": [],
                        "unicodeLtmo": []
                    },
                    "ruleDescriptions": {
                        "any": "any object",
                        "end": "end of input",
                        "space": "a space",
                        "lower": "a lowercase letter",
                        "upper": "an uppercase letter"
                    },
                    "ctors": {},
                    "constructors": {}
                },
                "ruleBodies": {
                    "alnum": {
                        "terms": [{
                                "ruleName": "letter",
                                "params": []
                            }, {
                                "ruleName": "digit",
                                "params": []
                            }
                        ]
                    },
                    "letter": {
                        "terms": [{
                                "ruleName": "lower",
                                "params": []
                            }, {
                                "ruleName": "upper",
                                "params": []
                            }, {
                                "ruleName": "unicodeLtmo",
                                "params": []
                            }
                        ]
                    },
                    "digit": {
                        "from": "0",
                        "to": "9"
                    },
                    "hexDigit": {
                        "terms": [{
                                "ruleName": "digit",
                                "params": []
                            }, {
                                "from": "a",
                                "to": "f"
                            }, {
                                "from": "A",
                                "to": "F"
                            }
                        ]
                    },
                    "ListOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "ListOf_none": {
                        "factors": []
                    },
                    "ListOf": {
                        "terms": [{
                                "ruleName": "ListOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "ListOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    },
                    "listOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "listOf_none": {
                        "factors": []
                    },
                    "listOf": {
                        "terms": [{
                                "ruleName": "listOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "listOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    }
                },
                "ruleFormals": {
                    "alnum": [],
                    "letter": [],
                    "digit": [],
                    "hexDigit": [],
                    "ListOf_some": ["elem", "sep"],
                    "ListOf_none": ["elem", "sep"],
                    "ListOf": ["elem", "sep"],
                    "listOf_some": ["elem", "sep"],
                    "listOf_none": ["elem", "sep"],
                    "listOf": ["elem", "sep"]
                },
                "ruleDescriptions": {
                    "alnum": "an alpha-numeric character",
                    "letter": "a letter",
                    "digit": "a digit",
                    "hexDigit": "a hexadecimal digit"
                },
                "ctors": {},
                "constructors": {}
            },
            "ruleBodies": {
                "Gen": {
                    "expr": {
                        "ruleName": "ReadRule",
                        "params": [],
                        "interval": {
                            "inputStream": {
                                "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                "pos": 117,
                                "posInfos": []
                            },
                            "startIdx": 22,
                            "endIdx": 30
                        }
                    },
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 22,
                        "endIdx": 31
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 7,
                        "endIdx": 31
                    }
                },
                "ReadRule": {
                    "terms": [{
                            "ruleName": "letters",
                            "params": [],
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 50,
                                "endIdx": 57
                            }
                        }, {
                            "ruleName": "symbols",
                            "params": [],
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 60,
                                "endIdx": 67
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 50,
                        "endIdx": 67
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 35,
                        "endIdx": 67
                    }
                },
                "letters": {
                    "terms": [{
                            "obj": "F",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 81,
                                "endIdx": 84
                            }
                        }, {
                            "obj": "G",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 87,
                                "endIdx": 90
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 81,
                        "endIdx": 90
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 70,
                        "endIdx": 90
                    }
                },
                "symbols": {
                    "terms": [{
                            "obj": "-",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 105,
                                "endIdx": 108
                            }
                        }, {
                            "obj": "+",
                            "interval": {
                                "inputStream": {
                                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                                    "pos": 117,
                                    "posInfos": []
                                },
                                "startIdx": 111,
                                "endIdx": 114
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 105,
                        "endIdx": 114
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                            "pos": 117,
                            "posInfos": []
                        },
                        "startIdx": 94,
                        "endIdx": 114
                    }
                }
            },
            "ruleFormals": {
                "Gen": ["x", "y"],
                "ReadRule": [],
                "letters": [],
                "symbols": []
            },
            "ruleDescriptions": {},
            "defaultStartRule": "Gen",
            "ctors": {},
            "constructors": {},
            "definitionInterval": {
                "inputStream": {
                    "source": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
                    "pos": 117,
                    "posInfos": []
                },
                "startIdx": 0,
                "endIdx": 116
            }
        },
        "Turtle": {
            "name": "Turtle",
            "superGrammar": {
                "name": "BuiltInRules",
                "superGrammar": {
                    "name": "ProtoBuiltInRules",
                    "ruleBodies": {
                        "any": {},
                        "end": {},
                        "spaces_": {
                            "expr": {
                                "ruleName": "space",
                                "params": []
                            }
                        },
                        "space": {
                            "from": "\u0000",
                            "to": " "
                        },
                        "lower": {
                            "category": "Ll",
                            "pattern": {}
                        },
                        "upper": {
                            "category": "Lu",
                            "pattern": {}
                        },
                        "unicodeLtmo": {
                            "category": "Ltmo",
                            "pattern": {}
                        }
                    },
                    "ruleFormals": {
                        "any": [],
                        "end": [],
                        "spaces_": [],
                        "space": [],
                        "lower": [],
                        "upper": [],
                        "unicodeLtmo": []
                    },
                    "ruleDescriptions": {
                        "any": "any object",
                        "end": "end of input",
                        "space": "a space",
                        "lower": "a lowercase letter",
                        "upper": "an uppercase letter"
                    },
                    "ctors": {},
                    "constructors": {}
                },
                "ruleBodies": {
                    "alnum": {
                        "terms": [{
                                "ruleName": "letter",
                                "params": []
                            }, {
                                "ruleName": "digit",
                                "params": []
                            }
                        ]
                    },
                    "letter": {
                        "terms": [{
                                "ruleName": "lower",
                                "params": []
                            }, {
                                "ruleName": "upper",
                                "params": []
                            }, {
                                "ruleName": "unicodeLtmo",
                                "params": []
                            }
                        ]
                    },
                    "digit": {
                        "from": "0",
                        "to": "9"
                    },
                    "hexDigit": {
                        "terms": [{
                                "ruleName": "digit",
                                "params": []
                            }, {
                                "from": "a",
                                "to": "f"
                            }, {
                                "from": "A",
                                "to": "F"
                            }
                        ]
                    },
                    "ListOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "ListOf_none": {
                        "factors": []
                    },
                    "ListOf": {
                        "terms": [{
                                "ruleName": "ListOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "ListOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    },
                    "listOf_some": {
                        "factors": [{
                                "index": 0
                            }, {
                                "expr": {
                                    "factors": [{
                                            "index": 1
                                        }, {
                                            "index": 0
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "listOf_none": {
                        "factors": []
                    },
                    "listOf": {
                        "terms": [{
                                "ruleName": "listOf_some",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }, {
                                "ruleName": "listOf_none",
                                "params": [{
                                        "index": 0
                                    }, {
                                        "index": 1
                                    }
                                ]
                            }
                        ]
                    }
                },
                "ruleFormals": {
                    "alnum": [],
                    "letter": [],
                    "digit": [],
                    "hexDigit": [],
                    "ListOf_some": ["elem", "sep"],
                    "ListOf_none": ["elem", "sep"],
                    "ListOf": ["elem", "sep"],
                    "listOf_some": ["elem", "sep"],
                    "listOf_none": ["elem", "sep"],
                    "listOf": ["elem", "sep"]
                },
                "ruleDescriptions": {
                    "alnum": "an alpha-numeric character",
                    "letter": "a letter",
                    "digit": "a digit",
                    "hexDigit": "a hexadecimal digit"
                },
                "ctors": {},
                "constructors": {}
            },
            "ruleBodies": {
                "Draw": {
                    "expr": {
                        "terms": [{
                                "ruleName": "drawLetter",
                                "params": [],
                                "interval": {
                                    "inputStream": {
                                        "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                        "pos": 90,
                                        "posInfos": []
                                    },
                                    "startIdx": 27,
                                    "endIdx": 37
                                }
                            }, {
                                "ruleName": "turn",
                                "params": [],
                                "interval": {
                                    "inputStream": {
                                        "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                        "pos": 90,
                                        "posInfos": []
                                    },
                                    "startIdx": 40,
                                    "endIdx": 44
                                }
                            }
                        ],
                        "interval": {
                            "inputStream": {
                                "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                "pos": 90,
                                "posInfos": []
                            },
                            "startIdx": 27,
                            "endIdx": 44
                        }
                    },
                    "interval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 26,
                        "endIdx": 46
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 10,
                        "endIdx": 46
                    }
                },
                "drawLetter": {
                    "ruleName": "letter",
                    "params": [],
                    "interval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 62,
                        "endIdx": 68
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 50,
                        "endIdx": 68
                    }
                },
                "turn": {
                    "terms": [{
                            "obj": "+",
                            "interval": {
                                "inputStream": {
                                    "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                    "pos": 90,
                                    "posInfos": []
                                },
                                "startIdx": 78,
                                "endIdx": 81
                            }
                        }, {
                            "obj": "-",
                            "interval": {
                                "inputStream": {
                                    "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                                    "pos": 90,
                                    "posInfos": []
                                },
                                "startIdx": 84,
                                "endIdx": 87
                            }
                        }
                    ],
                    "interval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 78,
                        "endIdx": 87
                    },
                    "definitionInterval": {
                        "inputStream": {
                            "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                            "pos": 90,
                            "posInfos": []
                        },
                        "startIdx": 71,
                        "endIdx": 87
                    }
                }
            },
            "ruleFormals": {
                "Draw": ["x", "y"],
                "drawLetter": [],
                "turn": []
            },
            "ruleDescriptions": {},
            "defaultStartRule": "Draw",
            "ctors": {},
            "constructors": {},
            "definitionInterval": {
                "inputStream": {
                    "source": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
                    "pos": 90,
                    "posInfos": []
                },
                "startIdx": 0,
                "endIdx": 89
            }
        },
        "___sourceAssetTimestamp": "Wed Jan 27 2016 20:53:32 GMT+0300 (MSK)",
        "angle": 120,
        "axiomF": "F--F--F--G",
        "axiomG": "GG",
        "iteration": 5,
        "materialDef": {
            "shininess": 15,
            "alpha": 1,
            "ambient": {
                "r": 1,
                "g": 1,
                "b": 1
            },
            "color": {
                "r": 1,
                "g": 1,
                "b": 1,
                "a": 1
            },
            "emit": {
                "r": 0,
                "g": 0,
                "b": 0
            },
            "reflect": 0.8,
            "shadeless": false,
            "shadow": true,
            "specularColor": {
                "r": 0.5773502691896258,
                "g": 0.5773502691896258,
                "b": 0.5773502691896258
            },
            "specularLevel": 1,
            "layers": [{
                    "alpha": 1,
                    "blendMode": 0,
                    "mapInput": 0,
                    "mapTo": 1,
                    "offsetx": 0,
                    "offsety": 0,
                    "rot": 0,
                    "scalex": 1,
                    "scaley": 1,
                    "src": "checker.jpg"
                }
            ],
            "type": "phong",
            "side": 0,
            "blendMode": 1,
            "fog": true,
            "shading": true,
            "metal": false,
            "wireframe": false,
            "depthtest": true,
            "depthwrite": true,
            "vertexColors": false
        },
        "ohmLSys": "LSys { Gen<x, y> \n  = ReadRule+ \n  ReadRule \n   = letters | symbols\n  letters  = \"F\" | \"G\" \n  symbols  = \"-\" | \"+\" }\n",
        "ohmTurtle": "Turtle {\n Draw<x, y> \n  = (drawLetter | turn)+ \n  drawLetter =letter\n  turn = \"+\" | \"-\" }\n",
        "owner": "admin",
        "rotation": [0, 0, 1, 0],
        "rule": "F--F--F",
        "scale": [1, 1, 1],
        "size": [1, 1, 1],
        "tempid": "",
        "texture": "checker.jpg",
        "transform": [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0.0010000000474974513, 1],
        "type": "Primitive"
    },
    "random": {
        "c": 1,
        "s0": 0.235089645255357,
        "s1": 0.870469290530309,
        "s2": 0.274168689968064
    },
    "sequence": 0,
    "source": "vwf/model/threejs/turtle.js",
    "type": "subDriver/threejs"
}