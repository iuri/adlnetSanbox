include ./editorTools

doctype html
html
	head
		meta(charset="utf-8")
		meta(name="apple-mobile-web-app-capable", content="yes")
		meta(name="format-detection", content="telephone=no")
		meta(name="viewport", content="width = device-width,initial-scale = 1.0, user-scalable = no")

		//-
			Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
			Secretary of Defense (Personnel & Readiness).

			Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
			except in compliance with the License. You may obtain a copy of the License at

			  http://www.apache.org/licenses/LICENSE-2.0

			Unless required by applicable law or agreed to in writing, software distributed under the
			License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
			either express or implied. See the License for the specific language governing permissions
			and limitations under the License.


			The Virtual World Framework client is a collection of scripts and a world specification
			passed to an initialization call. In this sample, the world specification is provided
			inline for clarity, but it is normally provided by the reflector or may be specified as a
			URI and loaded from a network-visible location.




		title= instanceData.title
		style
			#xLoader {position: absolute; top: 0; bottom: 0; right: 0; left: 0; background: white; z-index: 9 } #xLoader .google-spin-wrapper {top: 0; left: 0; width: 100%; height: 100%; z-index: 1000 } #xLoader .google-spin-wrapper .google-spin {display: block; position: relative; left: 50%; top: 50%; width: 100px; height: 100px; margin: -50px 0 0 -50px; border-radius: 50%; border: 10px solid transparent; border-top-color: #3A8FFF; -webkit-animation: xLoaderGoogleSpin 2s linear infinite; -moz-animation: xLoaderGoogleSpin 2s linear infinite; -ms-animation: xLoaderGoogleSpin 2s linear infinite; -o-animation: xLoaderGoogleSpin 2s linear infinite; animation: xLoaderGoogleSpin 2s linear infinite; box-shadow: 0px 0px 10px inset; } #xLoader .google-spin-wrapper .google-spin:before {content: ""; position: absolute; top: 5px; left: 5px; right: 5px; bottom: 5px; border-radius: 50%; border: 10px solid transparent; border-top-color: #515151; border-right-color: #515151; -webkit-animation: xLoaderGoogleSpin 3s linear infinite; -moz-animation: xLoaderGoogleSpin 3s linear infinite; -ms-animation: xLoaderGoogleSpin 3s linear infinite; -o-animation: xLoaderGoogleSpin 3s linear infinite; animation: xLoaderGoogleSpin 3s linear infinite; box-shadow: 0px 0px 10px; } #xLoader .google-spin-wrapper .google-spin:after {content: ""; position: absolute; top: 15px; left: 15px; right: 15px; bottom: 15px; border-radius: 50%; border: 3px solid transparent; border-top-color: #3A8FFF; border-left-color: #3A8FFF; -webkit-animation: xLoaderGoogleSpin 2s linear infinite; -moz-animation: xLoaderGoogleSpin 2s linear infinite; -ms-animation: xLoaderGoogleSpin 2s linear infinite; -o-animation: xLoaderGoogleSpin 2s linear infinite; animation: xLoaderGoogleSpin 2s linear infinite background-color: #999; box-shadow: 0px 0px 10px; } @-webkit-keyframes xLoaderGoogleSpin {0% {transform: rotate(0deg) } 100% {transform: rotate(360deg) } } @-moz-keyframes xLoaderGoogleSpin {0% {transform: rotate(0deg) } 100% {transform: rotate(360deg) } } @-ms-keyframes xLoaderGoogleSpin {0% {transform: rotate(0deg) } 100% {transform: rotate(360deg) } } @-o-keyframes xLoaderGoogleSpin {0% {transform: rotate(0deg) } 100% {transform: rotate(360deg) } } @keyframes xLoaderGoogleSpin {0% {transform: rotate(0deg) } 100% {transform: rotate(360deg) } }

		script(type="text/javascript", src="../polyfills.js")
		script(type="text/javascript", src="../require.js")
		script(type="text/javascript", src="/vwfDataManager.svc/getanalytics.js")
		link(href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,400italic|Roboto+Condensed|Roboto|Open+Sans', rel='stylesheet', type='text/css')

		//-
			This is the main client library. vwf.js creates a framework manager and attaches it to
			the global window object as window.vwf. All access to the framework is through that
			reference, and no other objects are globally visible.

			The core framework manages the simulation and synchronizes it across worlds shared by
			multiple users. But, the manner in which the simulation is expressed is controlled by
			extension modules. There are two flavors. Models directly control the simulation but
			cannot accept external input. The model configuration is identical for all participants
			in a shared world. Views may accept external input -such as pointer and key events or
			directives from a connection to an outside engine that is not visible to all users- but
			may only affect the simulation indirectly through the synchronization server.

		link(rel="stylesheet", type="text/css", href="../index.css")
		link(rel="shortcut icon", href="/adl/sandbox/img/VWS_Logo.ico")

		if needsTools
			+editorTools_head

		

		script(type="text/javascript").
			// here we go! this fires a bunch of loads, and when they are don, launches the VWF
			var count = 0;
			var total = 151;

			requirejs.onResourceLoad = function (context, map, depArray) {
			  //jQuery(".progress-label").text(map);
			  var div = document.getElementById("preloadprogress");
			  count++;
			 
			  div.style.width = count/total * 95 +'%';
			}

			require(['../load']);


	body(style="background: black;overflow:hidden; width: 100%;height: 100%;" oncontextmenu="return false;")

		
		
		//-
			Generic clients may have nearly empty pages, but pages for custom clients may be laid
			out in any manner desired. Any view and models that render to the page should be
			instructed where to attach their content.

			The main content renders to "#vwf-root", the item with the id "vwf-root".

		//- asset preload loading screen
		div#preloadGUIBack(style='display:block')
			
			div#xLoader(style="  zoom:2;  position: fixed;z-index: 1000000;top: calc(30% - 50px);left: calc(50% - 40px);")
				div.google-spin-wrapper
						div.google-spin

			// -img#loadingSplash
			div#preloadGUI
				div.preloadCenter
					div#preloadprogress
						p.progress-label 
				div
					div#preloadguiText Loading Engine...

		mixin vwf-root
			#vwf-root(style='left: 0%; width:100%; top:0%; height:100%')
				canvas#index-vwf.vwf-scene(width='100', height='100')
				#glyphOverlay(style='display: none;')
				#guioverlay_index-vwf
				iframe#resizer(href='about:blank', frameborder='0')

		if needsTools
			+editorTools_body
				+vwf-root
		else
			+vwf-root
